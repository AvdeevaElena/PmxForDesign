{"version":3,"sources":["Components/MenuBar.jsx","Components/Kartochka.jsx","Components/DemoNews2.jsx","http-common.js","services/tutorial.service.js","Columns/columns.js","Components/Editors/SimpleEditor.jsx","utils.js","Components/Editors/AsyncValidationEditor.jsx","Components/Editors/AutoCompleteEditor.jsx","Components/Editors/DateEditor.jsx","Components/DatePicker/MyDatePicker.jsx","Components/index.js","Components/Renderers/ActionsRenderer.jsx","Components/StatusBar/AddRowStatusBar.jsx","Components/Renderers/ActionsRendererWithoutDelete.jsx","Components/Renderers/ActionsRendererListPacients.jsx","Components/testTable.js","Columns/columnsZapiski.js","Components/zapiskiTable.js","Columns/columnsZapiskiRole.js","Components/zapiskiTableRole.js","Components/gridsStyle.js","App.js","serviceWorker.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","classes","useTheme","React","useState","open","setOpen","openList","setOpenList","handleClickList","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","component","subheader","ListSubheader","id","style","ListItem","button","ListItemIcon","UserOutlined","ListItemText","primary","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","Button","textAlign","Link","to","NotificationOutlined","paragraph","Kartochka","state","infoList","axios","get","then","res","data","setState","maxWidth","paddingTop","backgroundColor","palette","background","rows","this","userName","Object","keys","filter","item","map","list","nameN","userFamily","nameS","userFatherName","nameL","userBirth","dateB","userIn","dateP","userOut","dateV","marginTop","float","secondary","Checkbox","tabIndex","disableRipple","children","Component","bigDiv","leftDiv","rightDiv","DemoNews2","handleExpandClick","setExpanded","expanded","handleChangeZayavki","panel","event","isExpanded","handleClickOpen123","console","log","handleClose123","handleChange","newValue","a11yProps","value","newsList","zapiskiList","zayvkiList","setValue","index","tabList","s","Tab","label","title","tabPanel","role","hidden","Box","p","date","zapiskiByCorpusLeft","corpus","Card","bordered","marginBottom","CardActionArea","CardContent","totalZapisok","gutterBottom","namepasient","size","Dialog","DialogTitle","DialogContent","dividers","satus","datecreate","DialogActions","autoFocus","zapiskiByCorpusRight","showZayvkiList","Accordion","onChange","AccordionSummary","expandIcon","aria-controls","fontSize","flexBasis","status","zagolovok","AccordionDetails","Paper","elevation","overflow","height","Tabs","orientation","borderRightColor","borderRight","baseURL","headers","http","post","put","delete","columnDefs","headerName","field","cellEditor","colId","cellRenderer","editable","minWidth","defaultColDef","resizable","floatingFilter","suppressKeyboardEvent","params","editing","forwardRef","props","ref","inputRef","useRef","useImperativeHandle","getValue","afterGuiAttached","current","focus","select","type","e","target","placeholder","column","useComponentWillMount","func","willMount","inputValue","setInputValue","valid","setValid","validating","setValidating","touched","setTouched","debouncedInputVal","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","Math","floor","random","Promise","resolve","reject","condition","catch","err","isCancelAfterEnd","loadingElement","txtColor","Autocomplete","options","onInputChange","disableClearable","renderInput","TextField","selectedDate","setSelectedDate","dateString","format","match","day","month","year","Date","utils","DateFnsUtils","margin","d","setHours","disableToolbar","handleDateChange","onDateChanged","getDate","setDate","SimpleEditor","AsyncValidationEditor","AutoCompleteEditor","DateEditor","MyDatePicker","ActionsRenderer","setEditing","disabled","setDisabled","onRowEditingStarted","node","onRowEditingStopped","dataCopy","values","some","isEmptyRow","deleteRow","stopEditing","bool","api","force","confirm","window","JSON","stringify","updateRowData","remove","refreshCells","getEditingCells","length","addEventListener","removeEventListener","startEditingCell","rowIndex","colKey","AddRowStatusBar","uuid","emptyRow","add","getRowNode","ensureIndexVisible","columnApi","getAllColumns","ActionsRendererWithoutDelete","ActionsRendererListPacients","frameworkComponents","simpleEditor","GridComponents","asyncValidationEditor","autoCompleteEditor","agDateInput","dateEditor","addRowStatusBar","TestTable","setRowData","setColumnApi","setGridApi","onGridReady","bind","gridApi","sizeColumnsToFit","fetch","json","slice","TutorialDataService","getAll","response","tutorials","rowData","paddingLeft","getRowNodeId","editType","suppressClickEdit","statusBar","statusPanels","statusPanel","cellEditorParams","actionsRenderer","ZapiskiTable","rowClassRules","cellClass","autoHeight","showMultiline","prototype","init","ui","document","createElement","innerHTML","getGui","Layout","Header","ZapiskiTableRole","App","backgraund","path","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"mnBA0BMA,EAAc,IAEdC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAAiBf,EAAjB,OACLgB,WAAYhB,EACZO,WAAYJ,EAAMK,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQP,EAAMK,YAAYE,OAAOO,QACjCL,SAAUT,EAAMK,YAAYI,SAASM,kBAGzCC,WAAY,CACVC,YAAajB,EAAMkB,QAAQ,IAE7BC,KAAM,CACJjB,QAAS,QAEXkB,OAAQ,CACNR,MAAOf,EACPwB,WAAY,GAEdC,YAAa,CACXV,MAAOf,GAET0B,aAAa,yBACXrB,QAAS,OACTsB,WAAY,SACZC,QAASzB,EAAMkB,QAAQ,EAAG,IAEvBlB,EAAM0B,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVL,QAASzB,EAAMkB,QAAQ,GACvBd,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC7CC,OAAQP,EAAMK,YAAYE,OAAOC,MACjCC,SAAUT,EAAMK,YAAYI,SAASC,gBAEvCG,YAAY,KAEdkB,aAAc,CACZ3B,WAAYJ,EAAMK,YAAYC,OAAO,SAAU,CAC7CC,OAAQP,EAAMK,YAAYE,OAAOO,QACjCL,SAAUT,EAAMK,YAAYI,SAASM,iBAEvCF,WAAY,OAID,SAASmB,IACtB,IAAMC,EAAUnC,IACVE,EAAQkC,cAF+B,EAKrBC,IAAMC,UAAS,GALM,mBAKtCC,EALsC,KAKhCC,EALgC,OAMbH,IAAMC,UAAS,GANF,mBAMtCG,EANsC,KAM5BC,EAN4B,OAOHL,IAAMC,UAAS,GAPZ,gCAQbD,IAAMC,UAAS,IARF,mBAiBtCK,GAjBsC,UAiBpB,WACvBD,GAAaD,KAYf,OACE,sBAAKG,UAAWT,EAAQhC,KAAxB,UACE,cAAC0C,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,SAAS,QACTH,UAAWI,YAAKb,EAAQ9B,OAAT,eACZ8B,EAAQtB,YAAc0B,IAH3B,SAME,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QArBe,WACvBb,GAAQ,IAqBAc,KAAK,QACLV,UAAWI,YAAKb,EAAQjB,WAAYqB,GAAQJ,EAAQd,MALtD,SAOE,cAAC,IAAD,MAEF,cAACkC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,yJAKJ,eAACC,EAAA,EAAD,CACEd,UAAWT,EAAQb,OACnBkC,QAAQ,aACRG,OAAO,OACPpB,KAAMA,EACNJ,QAAS,CACPyB,MAAOzB,EAAQX,aANnB,UASE,qBAAKoB,UAAWT,EAAQV,aAAxB,SACE,cAACyB,EAAA,EAAD,CAAYG,QAtCM,WACxBb,GAAQ,IAqCF,SACuB,QAApBtC,EAAM2D,UAAsB,cAAC,IAAD,IAAsB,cAAC,IAAD,QAGvD,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAMC,UAAU,MACVZ,aAAW,uBACXa,UACF,cAACC,EAAA,EAAD,CAAeF,UAAW,MAAMG,GAAG,0BAGvCC,MAAS,CAAChE,QAAS,SACnBwC,UAAaT,EAAQhC,KAPrB,UASI,eAACkE,EAAA,EAAD,CAAUC,QAAM,EAACjB,QAASV,EAA1B,UACI,cAAC4B,EAAA,EAAD,UACM,cAACC,EAAA,EAAD,MAEN,cAACC,EAAA,EAAD,CAAcC,QAAQ,qDACrBjC,EAAW,cAACkC,EAAA,EAAD,IAAgB,cAACC,EAAA,EAAD,OAEhC,cAACC,EAAA,EAAD,CAAUC,GAAIrC,EAAUsC,QAAQ,OAAOC,eAAa,EAApD,SAEA,eAACjB,EAAA,EAAD,CAAMC,UAAU,MAAMiB,gBAAc,EAApC,UACA,4BAAG,cAACC,EAAA,EAAD,CAAQd,MAAS,CAAChE,QAAS,QAAS+E,UAAW,UAAYnB,UAAWoB,IAAMC,GAAG,aAA/E,gEACH,4BAAG,cAACH,EAAA,EAAD,CAAQd,MAAS,CAAChE,QAAS,QAAS+E,UAAW,UAAWnB,UAAWoB,IAAMC,GAAG,aAA9E,+EAGH,eAAChB,EAAA,EAAD,CAAUC,QAAM,EAACjB,QAASV,EAA1B,UACI,cAAC4B,EAAA,EAAD,UACM,cAACe,EAAA,EAAD,MAEN,cAACb,EAAA,EAAD,CAAcC,QAAQ,+CACrBjC,EAAW,cAACkC,EAAA,EAAD,IAAgB,cAACC,EAAA,EAAD,OAEhC,eAACC,EAAA,EAAD,CAAUC,GAAIrC,EAAUsC,QAAQ,OAAOC,eAAa,EAApD,UACF,4BAAG,cAACE,EAAA,EAAD,CAAQd,MAAS,CAAChE,QAAS,QAAS+E,UAAW,UAAYnB,UAAWoB,IAAMC,GAAG,gBAA/E,yFACH,4BAAG,cAACH,EAAA,EAAD,CAAQd,MAAS,CAAChE,QAAS,QAAS+E,UAAW,UAAYnB,UAAWoB,IAAMC,GAAG,oBAA/E,mFACH,4BAAG,cAACH,EAAA,EAAD,CAAQd,MAAS,CAAChE,QAAS,QAAS+E,UAAW,UAAYnB,UAAWoB,IAAMC,GAAG,aAA/E,+EAIP,uBACEzC,UAAWI,YAAKb,EAAQJ,QAAT,eACZI,EAAQF,aAAeM,IAF5B,UAKE,qBAAKK,UAAWT,EAAQV,eACxB,cAAC8B,EAAA,EAAD,CAAYgC,WAAS,U,yDCtEXC,G,mNA3GdC,MAAQ,CACNC,SAAU,I,uDAER,WAAqB,IAAD,OAClBC,IAAMC,IAAN,+CACCC,MAAK,SAAAC,GACJ,IAAMJ,EAAWI,EAAIC,KACrB,EAAKC,SAAS,CAAEN,kB,oBAGxB,WACoBzF,aAAW,SAACC,GAAD,MAAY,CACnCC,KAAM,CACJW,MAAO,OACPmF,SAAU,OACVC,WAAY,GACZC,gBAAiBjG,EAAMkG,QAAQC,WAAWzC,WALhD,IAQQ0C,EAAOC,KAAKd,MAAMC,SAErBc,GADQF,EAAKG,OAAOC,KAAKJ,GAAM,IACpBA,EAAKK,QAAO,SAAAC,GAAI,OAAe,GAAXA,EAAKzC,MAAS0C,KAAI,SAAAC,GAAI,OAAIA,EAAKC,UAC9DC,EAAaV,EAAKK,QAAO,SAAAC,GAAI,OAAe,GAAXA,EAAKzC,MAAS0C,KAAI,SAAAC,GAAI,OAAIA,EAAKG,SAChEC,EAAiBZ,EAAKK,QAAO,SAAAC,GAAI,OAAe,GAAXA,EAAKzC,MAAS0C,KAAI,SAAAC,GAAI,OAAIA,EAAKK,SACpEC,EAAYd,EAAKK,QAAO,SAAAC,GAAI,OAAe,GAAXA,EAAKzC,MAAS0C,KAAI,SAAAC,GAAI,OAAIA,EAAKO,SAC/DC,EAAShB,EAAKK,QAAO,SAAAC,GAAI,OAAe,GAAXA,EAAKzC,MAAS0C,KAAI,SAAAC,GAAI,OAAIA,EAAKS,SAC5DC,EAAUlB,EAAKK,QAAO,SAAAC,GAAI,OAAe,GAAXA,EAAKzC,MAAS0C,KAAI,SAAAC,GAAI,OAAIA,EAAKW,SAClE,OACE,sBAAKrD,MAAO,CAAIsD,UAAU,GAAK5G,MAAO,QAAtC,UACA,cAACyC,EAAA,EAAD,CAAYC,QAAQ,KAAKQ,UAAU,KAC3BI,MAAO,CAAE+B,gBAAiB,UAAWhB,UAAW,UADxD,+PAIY,sBAAKf,MAAO,CAAEuD,MAAO,OAAS7G,MAAO,OAArC,UACA,cAACyC,EAAA,EAAD,CAAYC,QAAQ,KAAKQ,UAAU,KACvCI,MAAO,CAAE+B,gBAAiB,UAAWhB,UAAW,SAAWhC,MAAO,WAD9D,oJAIA,eAACY,EAAA,EAAD,CAAMC,UAAU,MAAMZ,aAAW,uBAAjC,UACV,cAACiB,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACA,cAACG,EAAA,EAAD,CAAcC,QAAU8B,EAAUoB,UAAU,yBAE5C,cAAC9D,EAAA,EAAD,IACA,cAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACA,cAACG,EAAA,EAAD,CAAcC,QAAUsC,EAAYY,UAAU,iDAE9C,cAAC9D,EAAA,EAAD,IACA,cAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACA,cAACG,EAAA,EAAD,CAAcC,QAAUwC,EAAiBU,UAAU,uDAEnD,cAAC9D,EAAA,EAAD,IACA,cAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACA,cAACG,EAAA,EAAD,CAAcC,QAAU0C,EAAYQ,UAAU,gFAE9C,cAAC9D,EAAA,EAAD,IACA,eAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACA,cAACC,EAAA,EAAD,UACE,cAACsD,EAAA,EAAD,CACEvE,KAAK,QAELwE,UAAW,EACXC,eAAa,MAIjB,cAACtD,EAAA,EAAD,CAAcC,QAAU4C,EAAQM,UAAU,mGAE1C,cAAC9D,EAAA,EAAD,IACA,eAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACA,cAACC,EAAA,EAAD,UACE,cAACsD,EAAA,EAAD,CACEvE,KAAK,QAELwE,UAAW,EACXC,eAAa,MAIjB,cAACtD,EAAA,EAAD,CAAcC,QAAU8C,EAASI,UAAU,2EAE3C,cAAC9D,EAAA,EAAD,UAGA,sBAAKM,MAAO,CAAEuD,MAAO,QAAU7G,MAAO,OAAtC,UACA,cAACyC,EAAA,EAAD,CAAYC,QAAQ,KAAKQ,UAAU,KACvCI,MAAO,CAAE+B,gBAAiB,UAAWhB,UAAW,SAAWhC,MAAO,WAD9D,uHAGA,eAACY,EAAA,EAAD,CAAMC,UAAU,MAAMZ,aAAW,uBAAjC,UACA,cAACiB,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACA,cAACG,EAAA,EAAD,aAAcuD,SAAU,GAAGtD,QAAS,mPAAgDkD,UAAU,gKAA9F,YAA0I,8IAE1I,cAAC9D,EAAA,EAAD,IACA,eAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,UACA,cAACG,EAAA,EAAD,aAAcuD,SAAU,GAAGtD,QAAS,mPAAgDkD,UAAU,gKAA9F,YAA0I,4IAC1I,cAAC,IAAD,OAEA,cAAC9D,EAAA,EAAD,IACA,cAACO,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACA,cAACG,EAAA,EAAD,aAAcuD,SAAU,GAAGtD,QAAS,mPAAgDkD,UAAU,gKAA9F,YAA0I,8IAE1I,cAAC9D,EAAA,EAAD,iB,GArGYzB,IAAM4F,Y,+JCWxBC,GAAU,CAAC7B,WAAY,SACvB8B,GAAU,CAAC9B,WAAY,UAAWsB,MAAO,OAAQ7G,MAAO,MAAQV,QAAS,QACzEgI,GAAW,CAAC/B,WAAY,UAAWsB,MAAO,QAAS7G,MAAO,MAAOV,QAAS,QA0XjEiI,G,kDAzWX,aAAe,IAAD,8BACZ,gBAaFC,kBAAoB,WAClB,EAAK7C,MAAM8C,aAAa,EAAK9C,MAAM+C,WAfvB,EAiBdC,oBAAsB,SAACC,GAAD,OAAW,SAACC,EAAOC,GACvC,EAAK5C,SAAU,CAACwC,WAAUI,GAAaF,MAlB3B,EAsBdG,mBAAqB,WACnBC,QAAQC,IAAK,iBAAkB,EAAKtD,MAAMlD,MAEvC,EAAKkD,MAAMlD,KACb,EAAKyD,SAAU,CAACzD,MAAM,IAAO,WAE5BuG,QAAQC,IAAI,SAAU,EAAKtD,MAAMlD,UA5BvB,EAwCZyG,eAAiB,WACfF,QAAQC,IAAK,kBAAmB,EAAKtD,MAAMlD,MAC3C,EAAKyD,SAAU,CAACzD,MAAM,IAAQ,WAE5BuG,QAAQC,IAAI,SAAU,EAAKtD,MAAMlD,UA5CzB,EAiDf0G,aAAe,SAACN,EAAOO,GACtB,EAAKC,UAAUD,GAEf,EAAKlD,SAAS,CAAEoD,MAAOF,KAlDrB,EAAKzD,MAAQ,CACX4D,SAAU,GACZC,YAAa,GACbC,WAAY,GACZH,MAAO,EACPI,SAAU,EACVhB,UAAU,EACVjG,MAAM,GATM,E,6CAuDhB,SAAUkH,GACR,MAAO,CACNtF,GAAG,gBAAD,OAAkBsF,GAAS,gBAAgB,qBAAhB,OAAsCA,M,+BAGhE,WAAqB,IAAD,OAClB9D,IAAMC,IAAI,0DACTC,MAAK,SAAAC,GACJ,IAAMyD,EAAazD,EAAIC,KACvB,EAAKC,SAAS,CAAEuD,kBAGhB5D,IAAMC,IAAN,uDACCC,MAAK,SAAAC,GACJ,IAAMuD,EAAWvD,EAAIC,KACrB,EAAKC,SAAS,CAAEqD,gBAElB1D,IAAMC,IAAN,0DACCC,MAAK,SAAAC,GACJ,IAAMwD,EAAcxD,EAAIC,KACxB,EAAKC,SAAS,CAAEsD,qB,oBAGtB,WAAU,IAAD,OACGI,EAAUnD,KAAKd,MAAM4D,SAASxC,KAAI,SAAA8C,GACtC,OACK,cAACC,EAAA,EAAD,aAAKC,MAAOF,EAAEG,OAAW,EAAKX,UAAUQ,EAAExF,SAI3C4F,EAAWxD,KAAKd,MAAM4D,SAASxC,KAAI,SAAA8C,GACzC,OACE,qBACAK,KAAK,WACLC,OAAQ,EAAKxE,MAAM2D,MAAM,GAAKO,EAAExF,GAChCA,GAAE,4BAAuBwF,EAAExF,IAH3B,SAMC,EAAKsB,MAAM2D,MAAM,GAAKO,EAAExF,IACvB,eAAC+F,GAAA,EAAD,CAAKC,EAAG,EAAR,UACE,cAAC5G,EAAA,EAAD,UAAaoG,EAAEG,QACf,cAACvG,EAAA,EAAD,UAAaoG,EAAE5H,UACf,cAACwB,EAAA,EAAD,UAAaoG,EAAES,eAQfC,EAAsB9D,KAAKd,MAAM6D,YAAYzC,KAAI,SAAA8C,GACrD,MAAgB,QAAZA,EAAEW,QAA+B,SAAXX,EAAExG,MAE1B,eAACoH,GAAA,EAAD,CAAMC,UAAU,EAEhBpG,MAAO,CAAE+B,gBAAgB,UAAU/F,QAAS,OAASe,YAAY,EAAGsJ,aAAa,EAAG/C,UAAU,GAF9F,UAGH,cAACgD,GAAA,EAAD,UACH,eAACC,GAAA,EAAD,WACA,cAACpH,EAAA,EAAD,CAAYS,UAAU,IAAII,MAAO,CAACe,UAAW,SAA7C,SACKwE,EAAEiB,eAEL,cAACrH,EAAA,EAAD,CAAYsH,cAAY,EAACrH,QAAQ,KAAKQ,UAAU,KAAhD,SACC2F,EAAEmB,cAEH,cAAC5F,EAAA,EAAD,CAAS6F,KAAK,QAAS1H,QAAS,EAAKwF,mBAArC,sBAKN,eAACmC,GAAA,EAAD,CACAzI,KAAM,EAAKkD,MAAMlD,KADjB,UAEA,cAAC0I,GAAA,EAAD,sHAGA,eAACC,GAAA,EAAD,CAAeC,UAAQ,EAAvB,UACE,eAAC5H,EAAA,EAAD,CAAYsH,cAAY,EAAxB,yDACclB,EAAEmB,eAEhB,cAACvH,EAAA,EAAD,CAAYsH,cAAY,EAAxB,SACClB,EAAE5H,UAEH,eAACwB,EAAA,EAAD,CAAYsH,cAAY,EAAxB,UACClB,EAAEyB,MADH,IACWzB,EAAE0B,iBAGf,cAACC,GAAA,EAAD,UACE,cAACpG,EAAA,EAAD,CAAQqG,WAAS,EAAClI,QAAS,EAAK2F,eAAgB7F,MAAM,UAAtD,gEAOqB,QAAZwG,EAAEW,QAA+B,OAAXX,EAAExG,MAE3B,eAACoH,GAAA,EAAD,CAAMC,UAAU,EACVpG,MAAO,CAAE+B,gBAAgB,UAAU/F,QAAS,OAASe,YAAY,EAAGsJ,aAAa,EAAG/C,UAAU,GADpG,UAEE,cAACgD,GAAA,EAAD,UACA,eAACC,GAAA,EAAD,WACN,cAACpH,EAAA,EAAD,CAAYS,UAAU,IAAII,MAAO,CAACe,UAAW,SAA7C,SACKwE,EAAEiB,eAEL,cAACrH,EAAA,EAAD,CAAYsH,cAAY,EAACrH,QAAQ,KAAKQ,UAAU,KAAhD,SACC2F,EAAEmB,cAEH,cAAC5F,EAAA,EAAD,CAAS6F,KAAK,QAAS1H,QAAS,EAAKwF,mBAArC,sBAKN,eAACmC,GAAA,EAAD,CACAzI,KAAM,EAAKkD,MAAMlD,KADjB,UAEA,cAAC0I,GAAA,EAAD,sHAGA,eAACC,GAAA,EAAD,CAAeC,UAAQ,EAAvB,UACE,eAAC5H,EAAA,EAAD,CAAYsH,cAAY,EAAxB,yDACclB,EAAEmB,eAEhB,cAACvH,EAAA,EAAD,CAAYsH,cAAY,EAAxB,SACClB,EAAE5H,UAEH,eAACwB,EAAA,EAAD,CAAYsH,cAAY,EAAxB,UACClB,EAAEyB,MADH,IACWzB,EAAE0B,iBAGf,cAACC,GAAA,EAAD,UACE,cAACpG,EAAA,EAAD,CAAQqG,WAAS,EAAClI,QAAS,EAAK2F,eAAgB7F,MAAM,UAAtD,qEAlCK,KA4CIqI,EAAuBjF,KAAKd,MAAM6D,YAAYzC,KAAI,SAAA8C,GACvD,MAAgB,SAAZA,EAAEW,QAAgC,SAAXX,EAAExG,MAE3B,eAACoH,GAAA,EAAD,CAAMC,UAAU,EAChBpG,MAAO,CAAE+B,gBAAgB,UAAU/F,QAAS,OAASe,YAAY,EAAGsJ,aAAa,EAAG/C,UAAU,GAD9F,UAEL,cAACgD,GAAA,EAAD,UACO,eAACC,GAAA,EAAD,WACN,cAACpH,EAAA,EAAD,CAAYS,UAAU,IAAII,MAAO,CAACe,UAAW,SAA7C,SACKwE,EAAEiB,eAEL,cAACrH,EAAA,EAAD,CAAYsH,cAAY,EAACrH,QAAQ,KAAKQ,UAAU,KAAhD,SACC2F,EAAEmB,cAEH,cAAC5F,EAAA,EAAD,CAAS6F,KAAK,QAAS1H,QAAS,EAAKwF,mBAArC,sBAKN,eAACmC,GAAA,EAAD,CACAzI,KAAM,EAAKkD,MAAMlD,KADjB,UAEA,cAAC0I,GAAA,EAAD,sHAGA,eAACC,GAAA,EAAD,CAAeC,UAAQ,EAAvB,UACE,eAAC5H,EAAA,EAAD,CAAYsH,cAAY,EAAxB,yDACclB,EAAEmB,eAEhB,cAACvH,EAAA,EAAD,CAAYsH,cAAY,EAAxB,SACClB,EAAE5H,UAEH,eAACwB,EAAA,EAAD,CAAYsH,cAAY,EAAxB,UACClB,EAAEyB,MADH,IACWzB,EAAE0B,iBAGf,cAACC,GAAA,EAAD,UACE,cAACpG,EAAA,EAAD,CAAQqG,WAAS,EAAClI,QAAS,EAAK2F,eAAgB7F,MAAM,UAAtD,gEAQoB,SAAZwG,EAAEW,OAEJ,eAACC,GAAA,EAAD,CAAMC,UAAU,EACdpG,MAAO,CAAE+B,gBAAgB,UAAU/F,QAAS,OAASe,YAAY,EAAGsJ,aAAa,EAAG/C,UAAU,GADhG,UAEA,cAACgD,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACN,cAACpH,EAAA,EAAD,CAAYS,UAAU,IAAII,MAAO,CAACe,UAAW,SAA7C,SACKwE,EAAEiB,eAEL,cAACrH,EAAA,EAAD,CAAYsH,cAAY,EAACrH,QAAQ,KAAKQ,UAAU,KAAhD,SACC2F,EAAEmB,cAEH,cAAC5F,EAAA,EAAD,CAAS6F,KAAK,QAAS1H,QAAS,EAAKwF,mBAArC,sBAKN,eAACmC,GAAA,EAAD,CACAzI,KAAM,EAAKkD,MAAMlD,KADjB,UAEA,cAAC0I,GAAA,EAAD,sHAGA,eAACC,GAAA,EAAD,CAAeC,UAAQ,EAAvB,UACE,eAAC5H,EAAA,EAAD,CAAYsH,cAAY,EAAxB,yDACclB,EAAEmB,eAEhB,cAACvH,EAAA,EAAD,CAAYsH,cAAY,EAAxB,SACClB,EAAE5H,UAEH,eAACwB,EAAA,EAAD,CAAYsH,cAAY,EAAxB,UACClB,EAAEyB,MADH,IACWzB,EAAE0B,iBAGf,cAACC,GAAA,EAAD,UACE,cAACpG,EAAA,EAAD,CAAQqG,WAAS,EAAClI,QAAS,EAAK2F,eAAgB7F,MAAM,UAAtD,qEAlCI,KA4CIsI,EAAiBlF,KAAKd,MAAM8D,WAAW1C,KAAI,SAAA8C,GAC/C,OACJ,eAAC+B,GAAA,EAAD,CAAWlD,SAAU,EAAKA,SAAWmD,SAAU,EAAKlD,oBAAoBkB,EAAES,MAA1E,UAEA,eAACwB,GAAA,EAAD,CACEC,WAAY,cAAC,KAAD,IACZC,gBAAc,mBACd3H,GAAG,kBAHL,UAKE,cAACZ,EAAA,EAAD,CAAYa,MAAO,CAAC2H,SAAU,+BAC9BC,UAAW,SAASzK,WAAY,EAAG4B,MAAO,QAD1C,SACoDwG,EAAEsC,SACtD,cAAC1I,EAAA,EAAD,CAAYa,MAAO,CAAE2H,SAAU,gCAA/B,SACCpC,EAAEuC,eAGL,cAACC,GAAA,EAAD,UACA,eAACjC,GAAA,EAAD,CAAKC,EAAG,EAAR,UACE,cAAC5G,EAAA,EAAD,UACCoG,EAAE5H,UAEH,cAACwB,EAAA,EAAD,UACCoG,EAAES,kBAQT,OACE,gCACM,eAACgC,GAAA,EAAD,CAAOhI,MAAO,CAACsD,UAAU,IAAM2E,UAAW,EAA1C,UACN,cAAC9I,EAAA,EAAD,CAAYC,QAAQ,KAAKQ,UAAU,KACnCI,MAAO,CAAE+B,gBAAiB,UAAWhB,UAAW,UADhD,wDAIS,sBAAKf,MAAO,CAAEkI,SAAU,SAAUtK,SAAU,EAAGmE,gBAC/C,QAAQ/F,QAAS,OAAQmM,OAAQ,IAAKpL,YAAY,GADlD,UAED,cAACqL,EAAA,EAAD,CACMC,YAAY,WACZjJ,QAAQ,aACR4F,MAAO7C,KAAKd,MAAM2D,MAClBuC,SAAUpF,KAAK0C,aACf7F,aAAW,wBACXgB,MAAO,CAACkI,SAAU,SAASI,iBAAkB,OAAQC,YAAY,aANvE,SASGjD,IAEFK,QAGR,eAACqC,GAAA,EAAD,CAAOhI,MAAO,CAACsD,UAAU,IAAM2E,UAAW,EAA1C,UACD,cAAC9I,EAAA,EAAD,CAAYC,QAAQ,KAAKQ,UAAU,KACnCI,MAAO,CAAE+B,gBAAiB,UAAWhB,UAAW,UADhD,sHAIO,sBAAMf,MAAO8D,GAAb,UACC,qBAAK9D,MAAO+D,GAAZ,SACEkC,IAEF,qBAAKjG,MAAOgE,GAAZ,SACIoD,UAId,eAACY,GAAA,EAAD,CAAOhI,MAAO,CAACsD,UAAU,IAAM2E,UAAW,EAA1C,UACE,cAAC9I,EAAA,EAAD,CAAYC,QAAQ,KAAKQ,UAAU,KACnCI,MAAO,CAAE+B,gBAAiB,UAAWhB,UAAW,UADhD,kDAIA,8BACEsG,c,GA5WcpJ,IAAM4F,W,SClCftC,OAAMnF,OAAO,CAC1BoM,QAAS,4BACTC,QAAS,CACP,eAAgB,sBC2BL,O,sFA7Bb,WACE,OAAOC,GAAKlH,IAAI,gB,iBAGlB,SAAIzB,GACF,OAAO2I,GAAKlH,IAAL,qBAAuBzB,M,oBAGhC,SAAO4B,GACL,OAAO+G,GAAKC,KAAK,aAAchH,K,oBAGjC,SAAO5B,EAAI4B,GACT,OAAO+G,GAAKE,IAAL,qBAAuB7I,GAAM4B,K,oBAGtC,SAAO5B,GACL,OAAO2I,GAAKG,OAAL,qBAA0B9I,M,uBAGnC,WACE,OAAO2I,GAAKG,OAAL,gB,yBAGT,SAAYnD,GACV,OAAOgD,GAAKlH,IAAL,2BAA6BkE,Q,eC1B3BoD,I,qBAAa,CACxB,CACEC,WAAY,KACZC,MAAO,KACPC,WAAY,eACZ1G,QAAQ,GAEV,CACEwG,WAAY,6CACZC,MAAO,QACPC,WAAY,eACZ1G,QAAQ,GAEV,CACEwG,WAAY,qBACZC,MAAO,QACPC,WAAY,gBAEd,CACEF,WAAY,mDACZC,MAAO,QACPC,WAAY,gBAGd,CACEF,WAAY,4EACZC,MAAO,QACPC,WAAY,gBAEd,CACEF,WAAY,8FACZC,MAAO,QACPC,WAAY,eACZ1G,QAAQ,GAGV,CACEwG,WAAY,sEACZC,MAAO,QACPC,WAAY,eACZ1G,QAAQ,GAEV,CACEwG,WAAY,mDACZG,MAAO,UACPC,aAAc,8BACdC,UAAU,EACV7G,QAAQ,EACR8G,SAAU,OAKDC,GAAgB,CAC3BF,UAAU,EACVG,WAAW,EACXhH,QAAQ,EACRiH,gBAAgB,EAChBC,sBAAuB,SAAAC,GAAM,OAAIA,EAAOC,UC1D3BC,yBAAW,SAACC,EAAOC,GAC9B,IAAMC,EAAWC,mBADqB,EAEZ9L,mBAAS,IAFG,mBAE/B8G,EAF+B,KAExBI,EAFwB,KAsBtC,OAbA6E,8BAAoBH,GAAK,WACrB,MAAO,CACHI,SAAU,WACN,OAAOlF,GAEXmF,iBAAkB,WACd/E,EAASyE,EAAM7E,OACf+E,EAASK,QAAQC,QACjBN,EAASK,QAAQE,cAMzB,uBACIC,KAAK,OACL/L,UAAU,2CACVsL,IAAKC,EACLxC,SAvBR,SAAsBiD,GAElBpF,EAASoF,EAAEC,OAAOzF,QAsBdA,MAAOA,EACP0F,YAAa,SAAWb,EAAMc,OAAOzB,WCJpC0B,GAAwB,SAAAC,GACjC,IAAMC,EAAYd,kBAAO,GAErBc,EAAUV,SACVS,IAGJC,EAAUV,SAAU,GC9BTR,I,OAAAA,sBAAW,SAACC,EAAOC,GAAS,IAAD,EACF5L,mBAAS,IADP,mBAC/B6M,EAD+B,KACnBC,EADmB,OAEZ9M,oBAAS,GAFG,mBAE/B+M,EAF+B,KAExBC,EAFwB,OAGFhN,oBAAS,GAHP,mBAG/BiN,EAH+B,KAGnBC,EAHmB,OAIRlN,oBAAS,GAJD,mBAI/BmN,EAJ+B,KAItBC,EAJsB,KAMhCC,EDPiB,SAACvG,EAAOwG,GAAU,MAEGtN,mBAAS8G,GAFZ,mBAElCyG,EAFkC,KAElBC,EAFkB,KAqBzC,OAjBAC,qBACI,WAEI,IAAMC,EAAUC,YAAW,WACvBH,EAAkB1G,KACnBwG,GAKH,OAAO,WACHM,aAAaF,MAGrB,CAAC5G,EAAOwG,IAGLC,ECdmBM,CAAYhB,EAAY,KAQlDY,qBAAU,WAEN,IAAIhL,EAAUqL,KAAKC,MAAsB,IAAhBD,KAAKE,UAE9B,IAAIC,SAAQ,SAACC,EAASC,GACC,KAAftB,EACAqB,GAAQ,GAERP,YAAW,WACPO,EAAQvC,EAAMyC,UAAUvB,MACzBpK,MAGNc,MAAK,SAAAwJ,GACFC,EAASD,GACTG,GAAc,MAEjBmB,OAAM,SAAAC,GAAG,OAAI9H,QAAQC,IAAI6H,QAC/B,CAACjB,IAEJtB,8BAAoBH,GAAK,WACrB,MAAO,CACHI,SAAU,WACN,OAAOa,GAEXZ,iBAAkB,WACda,EAAcnB,EAAM7E,QAExByH,iBAAkB,WACd,OAAQxB,GAASE,OAK7B,IAAIuB,EAAiB,KACjBC,EAAW,KAoBf,OAlBI1B,GACA0B,EAAW,QACXD,EAAiB,sBAAMlO,UAAU,UAAhB,sBAEjBmO,EAAW,UACXD,EAAiB,sBAAMlO,UAAU,OAAhB,qBAGjB2M,IACAwB,EAAW,OACXD,EAAiB,sBAAMlO,UAAU,aAGhC6M,IACDsB,EAAW,QACXD,EAAiB,MAIjB,sBAAKlO,UAAU,6BAAf,UACI,uBACI+L,KAAK,OACL/L,UAAU,2CACVwB,MAAO,CAAEjB,MAAO4N,GAChBpF,SAnEZ,SAAsBiD,GAClBc,GAAW,GACXN,EAAcR,EAAEC,OAAOzF,OACvBoG,GAAc,IAiENpG,MAAO+F,EACPL,YAAa,SAAWb,EAAMc,OAAOzB,QAExCwD,S,oBC/EE9C,yBAAW,SAACC,EAAOC,GAAS,IAAD,EACZ5L,mBAAS,IADG,mBAC/B8G,EAD+B,KACxBI,EADwB,OAEFlH,mBAAS,IAFP,mBAE/B6M,EAF+B,KAEnBC,EAFmB,KAuBtC,OAXAf,8BAAoBH,GAAK,WACrB,MAAO,CACHI,SAAU,WACN,OAAOlF,GAEXmF,iBAAkB,WACd/E,EAASyE,EAAM7E,YAMvB,cAAC4H,GAAA,EAAD,CACI5M,MAAO,CAAEzC,QAAS,UAClBsP,QAAShD,EAAMgD,QACf7H,MAAOA,EACPuC,SAxBR,SAAyBiD,EAAGxF,GACxBI,EAASJ,IAwBL+F,WAAYA,EACZ+B,cAtBR,SAA8BtC,EAAGO,GAC7BC,EAAcD,IAsBVgC,kBAAgB,EAChBC,YAAa,SAACtD,GAAD,OACT,cAACuD,GAAA,EAAD,2BACQvD,GADR,IAEI1J,MAAO,CAAEzC,QAAS,SAClBmN,YAAa,UAAYb,EAAMc,OAAOzB,e,uCC/B3CU,yBAAW,SAACC,EAAOC,GAAS,IAAD,EACE5L,mBAAS,MADX,mBAC/BgP,EAD+B,KACjBC,EADiB,KAiCtC,OAvBAlD,8BAAoBH,GAAK,WACrB,MAAO,CACHI,SAAU,WACN,IAAIkD,EAAa,KAIjB,OAHIF,IACAE,EAAaC,aAAOH,EAAc,eAE/BE,GAEXX,iBAAkB,WACd,OAAQS,GAEZ/C,iBAAkB,WACd,GAAKN,EAAM7E,MAAX,CADoB,MAIU6E,EAAM7E,MAAMsI,MAAM,6BAJ5B,mBAIVC,GAJU,WAILC,EAJK,KAIEC,EAJF,KAKhBP,EAAe,IAAIQ,KAAKD,EAAMD,EAAQ,EAAGD,GAC7CJ,EAAgBD,SAMxB,cAAC,KAAD,CAAyBS,MAAOC,KAAhC,SACI,cAAC,KAAD,CACI5N,MAAO,CAAEtD,MAAO,OAAQmR,OAAQ,EAAGtQ,QAAS,YAC5CsQ,OAAO,SACP9N,GAAG,qBACHsN,OAAO,aACPrI,MAAOkI,EACP3F,SAtCZ,SAA0BuG,GAClBA,GACAA,EAAEC,SAAS,EAAG,EAAG,EAAG,GAExBZ,EAAgBW,IAmCR1O,QAAQ,SACR4O,gBAAc,EACdtD,YAAa,SAAWb,EAAMc,OAAOzB,aC9CtCU,yBAAW,SAACC,EAAOC,GAAS,IAAD,EACE5L,mBAAS,MADX,mBAC/BgP,EAD+B,KACjBC,EADiB,KAGtC,SAASc,EAAiBH,GAClBA,GAEAA,EAAEC,SAAS,EAAG,EAAG,EAAG,GAExBZ,EAAgBW,GAgBpB,OAbAnC,oBAAU9B,EAAMqE,cAAe,CAAChB,IAEhCjD,8BAAoBH,GAAK,WACrB,MAAO,CACHqE,QAAS,WACL,OAAOjB,GAEXkB,QAAS,SAAAN,GACLG,EAAiBH,QAMzB,cAAC,KAAD,CAAyBH,MAAOC,KAAhC,SACI,cAAC,KAAD,CACIC,OAAO,SACP9N,GAAG,qBACHsN,OAAO,aACPrI,MAAOkI,EACP3F,SAAU0G,S,UC5BX,I,OAAA,CACXI,gBACAC,yBACAC,sBACAC,cACAC,gBACAC,gBCbW,SAAC7E,GAAW,IAAD,EACM3L,oBAAS,GADf,mBACjByL,EADiB,KACRgF,EADQ,OAEQzQ,oBAAS,GAFjB,mBAEjB0Q,EAFiB,KAEPC,EAFO,KAsBtB,SAASC,EAAoBpF,GACrBG,EAAMkF,OAASrF,EAAOqF,KACtBJ,GAAW,GAEXE,GAAY,GAIpB,SAASG,EAAoBtF,GACrBG,EAAMkF,OAASrF,EAAOqF,MAkC9B,SAAoBpN,GAChB,IAAIsN,EAAQ,eAAQtN,GAEpB,cADOsN,EAASlP,IACRsC,OAAO6M,OAAOD,GAAUE,MAAK,SAAAnK,GAAK,OAAIA,KApCtCoK,CAAW1F,EAAO/H,MAGlBgN,GAAW,GAFXU,GAAU,GAKdR,GAAY,GAWpB,SAASS,EAAYC,GACjB1F,EAAM2F,IAAIF,YAAYC,GAG1B,SAASF,IAA0B,IAAhBI,EAAe,wDAC1B9N,EAAOkI,EAAMlI,KACb+N,GAAU,EACTD,IACDC,EAAUC,OAAOD,QAAP,oDAA4DE,KAAKC,UAAUlO,GAA3E,OAEV+N,IACA7F,EAAM2F,IAAIM,cAAc,CAAEC,OAAQ,CAACpO,KACnCkI,EAAM2F,IAAIQ,aAAa,CAAEP,OAAO,KAUxC,OAlEA7E,IAAsB,WAEU,IADTf,EAAM2F,IAAIS,kBACZC,QACbrB,GAAY,MAIpBlD,qBAAU,WAIN,OAHA9B,EAAM2F,IAAIW,iBAAiB,oBAAqBrB,GAChDjF,EAAM2F,IAAIW,iBAAiB,oBAAqBnB,GAEzC,WACHnF,EAAM2F,IAAIY,oBAAoB,oBAAqBtB,GACnDjF,EAAM2F,IAAIY,oBAAoB,oBAAqBpB,MAExD,IAoDC,8BACKrF,EACK,qCACE,wBACI5K,MAAM,UACNK,QAAQ,YACRH,QAAS,kBAAMqQ,GAAY,IAC3BV,SAAUA,EAJd,8DAKA,wBACI7P,MAAM,YACNK,QAAQ,YACRH,QAAS,kBAAMqQ,GAAY,IAC3BV,SAAUA,EAJd,2DAMF,qCACE,wBACI7P,MAAM,UACNK,QAAQ,WACRH,QAhDpB,WACI4K,EAAM2F,IAAIa,iBAAiB,CACvBC,SAAUzG,EAAMyG,SAChBC,OAAQ1G,EAAMc,OAAOzB,SA8CT0F,SAAUA,EAJd,8DAKA,wBACI7P,MAAM,YACNK,QAAQ,WACRH,QAAS,kBAAMoQ,KACfT,SAAUA,EAJd,8DD9EhB4B,gBEZW,SAAA3G,GAAU,IAAD,EACM3L,oBAAS,GADf,mBACjByL,EADiB,KACRgF,EADQ,KAatB,SAASG,IACPH,GAAW,GAGb,SAASK,IACPL,GAAW,GAwBb,OAvCAhD,qBAAU,WAIR,OAHA9B,EAAM2F,IAAIW,iBAAiB,oBAAqBrB,GAChDjF,EAAM2F,IAAIW,iBAAiB,oBAAqBnB,GAEzC,WACLnF,EAAM2F,IAAIY,oBAAoB,oBAAqBtB,GACnDjF,EAAM2F,IAAIY,oBAAoB,oBAAqBpB,MAEpD,IAgCD,qBAAKxQ,UAAU,oBAAf,SACE,wBACEY,QAASuK,EAAU,WAAa,YAChC5K,MAAM,UACNE,QA1BN,WACE,IAAIc,EAAK0Q,kBACT/L,QAAQC,IAAI,SAAU5E,GACtB,IAAI2Q,EAAW,CAAE3Q,MACjB8J,EAAM2F,IAAIM,cAAc,CAAEa,IAAK,CAACD,KAChC,IAAI3B,EAAOlF,EAAM2F,IAAIoB,WAAW7Q,GAChC2E,QAAQC,IAAI,gBAAiBoK,GAC7BrK,QAAQC,IAAI,yBAA0BoK,EAAKuB,UAC3CzG,EAAM2F,IAAIqB,mBAAmB9B,EAAKuB,UAElC5L,QAAQC,IAAI,mCAAoCkF,EAAM2F,IAAIqB,oBAG1DhF,YAAW,WACThC,EAAM2F,IAAIa,iBAAiB,CACzBC,SAAUvB,EAAKuB,SACfC,OAAQ1G,EAAMiH,UAAUC,gBAAgB,GAAG7H,UAE5C,MASC0F,SAAUjF,EAJZ,mEF/BFqH,6BGfW,SAACnH,GAAW,IAAD,EACM3L,oBAAS,GADf,mBACjByL,EADiB,KACRgF,EADQ,OAEQzQ,oBAAS,GAFjB,mBAEjB0Q,EAFiB,KAEPC,EAFO,KAsBtB,SAASC,EAAoBpF,GACrBG,EAAMkF,OAASrF,EAAOqF,KACtBJ,GAAW,GAEXE,GAAY,GAIpB,SAASG,EAAoBtF,GACrBG,EAAMkF,OAASrF,EAAOqF,KAkC9B,SAAoBpN,GAChB,IAAIsN,EAAQ,eAAQtN,GAEpB,cADOsN,EAASlP,IACRsC,OAAO6M,OAAOD,GAAUE,MAAK,SAAAnK,GAAK,OAAIA,KApCtCoK,CAAW1F,EAAO/H,MAqB9B,WAAmC,IAAhB8N,EAAe,wDAC1B9N,EAAOkI,EAAMlI,KACb+N,GAAU,EACTD,IACDC,EAAUC,OAAOD,QAAP,oDAA4DE,KAAKC,UAAUlO,GAA3E,OAEV+N,IACA7F,EAAM2F,IAAIM,cAAc,CAAEC,OAAQ,CAACpO,KACnCkI,EAAM2F,IAAIQ,aAAa,CAAEP,OAAO,KA5B5BJ,EAAU,GAEVV,GAAW,GAGfE,GAAY,GAWpB,SAASS,EAAYC,GACjB1F,EAAM2F,IAAIF,YAAYC,GAqB1B,OAlEA3E,IAAsB,WAEU,IADTf,EAAM2F,IAAIS,kBACZC,QACbrB,GAAY,MAIpBlD,qBAAU,WAIN,OAHA9B,EAAM2F,IAAIW,iBAAiB,oBAAqBrB,GAChDjF,EAAM2F,IAAIW,iBAAiB,oBAAqBnB,GAEzC,WACHnF,EAAM2F,IAAIY,oBAAoB,oBAAqBtB,GACnDjF,EAAM2F,IAAIY,oBAAoB,oBAAqBpB,MAExD,IAoDC,8BACKrF,EACK,qCACE,wBACI5K,MAAM,UACNK,QAAQ,YACRH,QAAS,kBAAMqQ,GAAY,IAC3BV,SAAUA,EAJd,8DAKA,wBACI7P,MAAM,YACNK,QAAQ,YACRH,QAAS,kBAAMqQ,GAAY,IAC3BV,SAAUA,EAJd,2DAMF,mCACE,wBACI7P,MAAM,UACNK,QAAQ,WACRH,QAhDpB,WACI4K,EAAM2F,IAAIa,iBAAiB,CACvBC,SAAUzG,EAAMyG,SAChBC,OAAQ1G,EAAMc,OAAOzB,SA8CT0F,SAAUA,EAJd,mEHvEhBqC,4BIhBW,SAACpH,GAAW,IAAD,EACM3L,oBAAS,GADf,mBACjByL,EADiB,KACRgF,EADQ,OAEQzQ,oBAAS,GAFjB,mBAEjB0Q,EAFiB,KAEPC,EAFO,KAsBtB,SAASC,EAAoBpF,GACrBG,EAAMkF,OAASrF,EAAOqF,KACtBJ,GAAW,GAEXE,GAAY,GAIpB,SAASG,EAAoBtF,GACrBG,EAAMkF,OAASrF,EAAOqF,MAkC9B,SAAoBpN,GAChB,IAAIsN,EAAQ,eAAQtN,GAEpB,cADOsN,EAASlP,IACRsC,OAAO6M,OAAOD,GAAUE,MAAK,SAAAnK,GAAK,OAAIA,KApCtCoK,CAAW1F,EAAO/H,MAGlBgN,GAAW,GAFXU,GAAU,GAKdR,GAAY,GAWpB,SAASS,EAAYC,GACjB1F,EAAM2F,IAAIF,YAAYC,GAG1B,SAASF,IAA0B,IAAhBI,EAAe,wDAC1B9N,EAAOkI,EAAMlI,KACb+N,GAAU,EACTD,IACDC,EAAUC,OAAOD,QAAP,oDAA4DE,KAAKC,UAAUlO,GAA3E,OAEV+N,IACA7F,EAAM2F,IAAIM,cAAc,CAAEC,OAAQ,CAACpO,KACnCkI,EAAM2F,IAAIQ,aAAa,CAAEP,OAAO,KAUxC,OAlEA7E,IAAsB,WAEU,IADTf,EAAM2F,IAAIS,kBACZC,QACbrB,GAAY,MAIpBlD,qBAAU,WAIN,OAHA9B,EAAM2F,IAAIW,iBAAiB,oBAAqBrB,GAChDjF,EAAM2F,IAAIW,iBAAiB,oBAAqBnB,GAEzC,WACHnF,EAAM2F,IAAIY,oBAAoB,oBAAqBtB,GACnDjF,EAAM2F,IAAIY,oBAAoB,oBAAqBpB,MAExD,IAoDC,8BACKrF,EACK,qCACE,wBACI5K,MAAM,UACNK,QAAQ,YACRH,QAAS,kBAAMqQ,GAAY,IAC3BV,SAAUA,EAJd,8DAKA,wBACI7P,MAAM,YACNK,QAAQ,YACRH,QAAS,kBAAMqQ,GAAY,IAC3BV,SAAUA,EAJd,2DAMF,qCACE,wBACI7P,MAAM,UACNK,QAAQ,WACRH,QAhDpB,WACI4K,EAAM2F,IAAIa,iBAAiB,CACvBC,SAAUzG,EAAMyG,SAChBC,OAAQ1G,EAAMc,OAAOzB,SA8CT0F,SAAUA,EAJd,8DAKA,wBACI7P,MAAM,YACNK,QAAQ,WACRH,QAAS,kBAAMoQ,KACfT,SAAUA,EAJd,gECnFdsC,I,cAAsB,CACxBC,aAAcC,GAAe/C,aAC7BgD,sBAAuBD,GAAe9C,sBACtCgD,mBAAoBF,GAAe7C,mBACnCgD,YAAaH,GAAe3C,aAC5B+C,WAAYJ,GAAe5C,WAC3ByC,4BAA6BG,GAAeH,4BAC5CQ,gBAAiBL,GAAeZ,kBAwErBkB,G,4MAlERrQ,MAAQ,CACNsQ,WAAY,GACZb,UAAW,GACXc,aAAc,GACdC,WAAY,GACZ/I,WAAYA,GACZQ,cAAeA,GACf4H,oBAAqBA,I,EAGtBY,YAAc,EAAKA,YAAYC,KAAjB,iB,iDAElB,SAAYrI,GACRvH,KAAK6P,QAAUtI,EAAO8F,IACtBrN,KAAK2O,UAAYpH,EAAOoH,UACxB3O,KAAK6P,QAAQC,qB,+BAEnB,WAAqB,IAAD,OAClBC,MACE,4DACAzQ,MAAK,SAAAC,GAAG,OAAIA,EAAIyQ,UAChB1Q,MAAK,SAAAE,GACJ,IAAMe,EAAOf,EAAKyQ,MAAM,EAAG,GAC3B,EAAKxQ,SAAS,CAAC+P,WAAYjP,S,+BAOhC,WAAqB,IAAD,OAClB2P,GAAoBC,SACjB7Q,MAAK,SAAA8Q,GACJ,EAAK3Q,SAAS,CACZ4Q,UAAWD,EAAS5Q,OAEtB+C,QAAQC,IAAI4N,EAAS5Q,SAEtB4K,OAAM,SAAA/B,GACL9F,QAAQC,IAAI6F,Q,oBAGlB,WACE,IAAMiI,EAAUtQ,KAAKd,MAAMsQ,WAC3B,OACI,sBAAO3R,MAAO,CAAItD,MAAO,OAAQoF,WAAY,QAA7C,UACK,oBAAI9B,MAAO,CAAEjB,MAAO,UAAWgC,UAAW,UAA1C,2GACA,qBAAKhB,GAAG,SAASC,MAAO,CAACmI,OAAQ,MAAOxJ,SAAU,WAAYjC,MAAO,MAAQgW,YAAa,QAAUlU,UAAU,kBAA9G,SACH,cAAC,eAAD,CACEsK,WAAY3G,KAAKd,MAAMyH,WACvBQ,cAAenH,KAAKd,MAAMiI,cAC1BmJ,QAASA,EACTE,aAAc,SAAAhR,GAAI,OAAIA,EAAK5B,IAC3B+R,YAAa3P,KAAK2P,YAClBZ,oBAAqBA,GACrB0B,SAAS,UACTC,mBAAiB,EACjBC,UAAW,CACTC,aAAc,CAAC,CAAEC,YAAa,gC,GA7DpBnP,a,SCpBXiF,GAAa,CACtB,CACEC,WAAY,KACZC,MAAO,KACPC,WAAY,gBAEd,CACEF,WAAY,+DACZC,MAAO,UACPC,WAAY,gBAEd,CACIF,WAAY,4EACZC,MAAO,aACPC,WAAY,gBAEd,CACEF,WAAY,kFACZC,MAAO,aACPC,WAAY,gBAEhB,CACEF,WAAY,6CACZC,MAAO,cACPC,WAAY,gBAEd,CACEF,WAAY,iCACZC,MAAO,QACPC,WAAY,gBAEd,CACEF,WAAY,qEACZC,MAAO,WACPC,WAAY,gBAEd,CACIF,WAAY,8FACZC,MAAO,WACPC,WAAY,gBAEhB,CACEF,WAAY,uCACZC,MAAO,SACPC,WAAY,qBACZgK,iBAAkB,CAChBpG,QAAS,CACP,iCACA,yDACA,6EACA,yDACA,mDACA,gDAIN,CACE9D,WAAY,mDACZG,MAAO,UACPC,aAAc,kBACdC,UAAU,EACV7G,QAAQ,EACR8G,SAAU,MAKDC,GAAgB,CAC3BF,UAAU,EACVG,WAAW,EACXhH,QAAQ,EACRiH,gBAAgB,EAChBC,sBAAuB,SAAAC,GAAM,OAAIA,EAAOC,UC1DtCuH,I,OAAsB,CACxBC,aAAcC,GAAe/C,aAC7BgD,sBAAuBD,GAAe9C,sBACtCgD,mBAAoBF,GAAe7C,mBACnCgD,YAAaH,GAAe3C,aAC5B+C,WAAYJ,GAAe5C,WAC3B0E,gBAAiB9B,GAAe1C,gBAChC+C,gBAAiBL,GAAeZ,kBAqFrB2C,G,4MAhFR9R,MAAQ,CACNsQ,WAAY,GACZb,UAAW,GACXc,aAAc,GACdC,WAAY,GACZ/I,WAAYA,GACZQ,cAAeA,GACf4H,oBAAqBA,I,EAGtBY,YAAc,EAAKA,YAAYC,KAAjB,iB,iDAElB,SAAYrI,GACRvH,KAAK6P,QAAUtI,EAAO8F,IACtBrN,KAAK2O,UAAYpH,EAAOoH,UACxB3O,KAAK6P,QAAQC,qB,+BAGnB,WAAqB,IAAD,OAClBC,MACE,0DACAzQ,MAAK,SAAAC,GAAG,OAAIA,EAAIyQ,UAChB1Q,MAAK,SAAAE,GACJ,IAAMe,EAAOf,EAAKyQ,MAAM,EAAG,GAC3B,EAAKxQ,SAAS,CAAC+P,WAAYjP,S,+BAIhC,WAAqB,IAAD,OAClB2P,GAAoBC,SACjB7Q,MAAK,SAAA8Q,GACJ,EAAK3Q,SAAS,CACZ4Q,UAAWD,EAAS5Q,UAGvB4K,OAAM,SAAA/B,GACL9F,QAAQC,IAAI6F,Q,oBAGlB,WACE,IAAMiI,EAAUtQ,KAAKd,MAAMsQ,WAC3B,OACE,sBAAO3R,MAAO,CAAItD,MAAO,OAAQoF,WAAY,QAA7C,UACO,oBAAI9B,MAAO,CAAEjB,MAAO,UAAWgC,UAAW,UAA1C,8HACL,qBAAKhB,GAAG,SAASC,MAAO,CAACmI,OAAQ,MAAOxJ,SAAU,WAAYjC,MAAO,MAAQgW,YAAa,QAAUlU,UAAU,kBAA9G,SACE,cAAC,eAAD,CACEsK,WAAY3G,KAAKd,MAAMyH,WACvBQ,cAAenH,KAAKd,MAAMiI,cAC1BmJ,QAASA,EACTE,aAAc,SAAAhR,GAAI,OAAIA,EAAK5B,IAC3B+R,YAAa3P,KAAK2P,YAClBsB,cAAe,CACb,UAAW,SAAU1J,GAEnB,GADIhF,QAAQC,IAAK,iCAAS+E,EAAO/H,KAAK5C,OACZ,QAAtB2K,EAAO/H,KAAK5C,MAChB,OAAO,GAET,YAAa,SAAU2K,GAErB,GADAhF,QAAQC,IAAK,iCAAS+E,EAAO/H,KAAK5C,OACR,UAAtB2K,EAAO/H,KAAK5C,MAChB,OAAO,GAEV,aAAc,SAAU2K,GAEvB,GADAhF,QAAQC,IAAK,iCAAS+E,EAAO/H,KAAK5C,OACR,WAAtB2K,EAAO/H,KAAK5C,MAChB,OAAO,IAGTmS,oBAAqBA,GACrB0B,SAAS,UACTC,mBAAiB,EACjBC,UAAW,CACTC,aAAc,CAAC,CAAEC,YAAa,gC,GA1EjBnP,aCxBdiF,GAAa,CACtB,CACEC,WAAY,KACZC,MAAO,KACPC,WAAY,gBAEd,CACEF,WAAY,mEACZC,MAAO,UACPC,WAAY,eACZE,aAAc,gBACdkK,UAAW,YACXC,YAAY,GAEd,CACIvK,WAAY,4EACZC,MAAO,aACPC,WAAY,gBAEd,CACEF,WAAY,kFACZC,MAAO,aACPC,WAAY,gBAEhB,CACEF,WAAY,6CACZC,MAAO,cACPC,WAAY,eACZE,aAAc,SAASO,GAGrB,OAFAhF,QAAQC,IAAK,cAAe+E,EAAO1E,OACnCN,QAAQC,IAAK,gBAAiB+E,EAAO/H,KAAK5B,IACnC,4CAA4C2J,EAAO/H,KAAK5B,GAAG,oCAAqC2J,EAAO1E,MAAM,SAGxH,CACE+D,WAAY,iCACZC,MAAO,QACPC,WAAY,gBAEd,CACEF,WAAY,qEACZC,MAAO,WACPC,WAAY,gBAEd,CACIF,WAAY,8FACZC,MAAO,WACPC,WAAY,gBAEhB,CACEF,WAAY,uCACZC,MAAO,SACPC,WAAY,qBACZgK,iBAAkB,CAChBpG,QAAS,CACP,iCACA,yDACA,6EACA,yDACA,mDACA,gDAIN,CACE9D,WAAY,mDACZG,MAAO,UACPC,aAAc,+BACdC,UAAU,EACV7G,QAAQ,EACR8G,SAAU,MAKDC,GAAgB,CAC3BF,UAAU,EACVG,WAAW,EACXhH,QAAQ,EACRiH,gBAAgB,EAChBC,sBAAuB,SAAAC,GAAM,OAAIA,EAAOC,UAG1C,SAAS4J,MACTA,GAAcC,UAAUC,KAAO,SAAS/J,GAGtC,IADiBA,EAAO1E,MAEtB,OAAO,KAGT7C,KAAKuR,GAAKC,SAASC,cAAc,OACjCzR,KAAKuR,GAAGG,UAAY,mCAClBnK,EAAO1E,MACP,QACA0E,EAAO1E,MAHW,eAOtBuO,GAAcC,UAAUM,OAAS,WAC/B,OAAO3R,KAAKuR,I,OCnFGK,EAAXC,OCnBD,IDoBD9C,GAAsB,CACxBC,aAAcC,GAAe/C,aAC7BgD,sBAAuBD,GAAe9C,sBACtCgD,mBAAoBF,GAAe7C,mBACnCgD,YAAaH,GAAe3C,aAC5B+C,WAAYJ,GAAe5C,WAC3B0E,gBAAiB9B,GAAeJ,6BAChCS,gBAAiBL,GAAeZ,iBAuFrByD,G,4MAjFR5S,MAAQ,CACNsQ,WAAY,GACZb,UAAW,GACXc,aAAc,GACdC,WAAY,GACZ/I,WAAYA,GACZQ,cAAeA,GACf4H,oBAAqBA,I,EAGtBY,YAAc,EAAKA,YAAYC,KAAjB,iB,iDAElB,SAAYrI,GACRvH,KAAK6P,QAAUtI,EAAO8F,IACtBrN,KAAK2O,UAAYpH,EAAOoH,UACxB3O,KAAK6P,QAAQC,qB,+BAGnB,WAAqB,IAAD,OAClBC,MACE,0DACAzQ,MAAK,SAAAC,GAAG,OAAIA,EAAIyQ,UAChB1Q,MAAK,SAAAE,GACJ,IAAMe,EAAOf,EAAKyQ,MAAM,EAAG,GAC3B,EAAKxQ,SAAS,CAAC+P,WAAYjP,S,+BAIhC,WAAqB,IAAD,OAClB2P,GAAoBC,SACjB7Q,MAAK,SAAA8Q,GACJ7N,QAAQC,IAAI,kBAAkB4N,EAAS5Q,MACvC,EAAKC,SAAS,CACZ4Q,UAAWD,EAAS5Q,UAGvB4K,OAAM,SAAA/B,GACL9F,QAAQC,IAAI6F,Q,oBAGlB,WACE,IAAMiI,EAAUtQ,KAAKd,MAAMsQ,WAC3B,OACI,sBAAO3R,MAAO,CAAItD,MAAO,OAAQoF,WAAY,QAA7C,UACK,oBAAI9B,MAAO,CAAEjB,MAAO,UAAWgC,UAAW,UAA1C,wHACA,qBAAKhB,GAAG,SAASC,MAAO,CAACmI,OAAQ,MAAOxJ,SAAU,WAAYjC,MAAO,MAAQgW,YAAa,QAAUlU,UAAU,kBAA9G,SACH,cAAC,eAAD,CACEsK,WAAY3G,KAAKd,MAAMyH,WACvBQ,cAAenH,KAAKd,MAAMiI,cAC1BmJ,QAASA,EACTtJ,aAAc,SAASO,GACrB,MAAO,mEAAoEA,EAAO/H,KAAKkG,OAAO,QAEhG8K,aAAc,SAAAhR,GAAI,OAAIA,EAAK5B,IAC3B+R,YAAa3P,KAAK2P,YAClBsB,cAAe,CACb,UAAW,SAAU1J,GAEnB,GADIhF,QAAQC,IAAK,iCAAS+E,EAAO/H,KAAK5C,OACZ,QAAtB2K,EAAO/H,KAAK5C,MAChB,OAAO,GAET,YAAa,SAAU2K,GAErB,GADAhF,QAAQC,IAAK,iCAAS+E,EAAO/H,KAAK5C,OACR,UAAtB2K,EAAO/H,KAAK5C,MAChB,OAAO,GAEV,aAAc,SAAU2K,GAEvB,GADAhF,QAAQC,IAAK,iCAAS+E,EAAO/H,KAAK5C,OACR,WAAtB2K,EAAO/H,KAAK5C,MAChB,OAAO,IAGTmS,oBAAqBA,GACrB0B,SAAS,UACTC,mBAAiB,a,GA7EEhP,aEFhBqQ,G,4JAnBb,WACE,OACE,cAAC,IAAD,UACA,sBAAKlU,MAAQ,CAACmU,WAAW,QAAUpX,YAAY,EAAGuG,UAAU,GAAI5G,MAAO,OAASyL,OAAQ,OAAQnM,QAAQ,QAAxG,UACA,cAAC,EAAD,IACM,eAAC,KAAD,WACY,cAAC,KAAD,CAAOoY,KAAK,aAAaxU,UAAWwB,IACpC,cAAC,KAAD,CAAOgT,KAAK,aAAaxU,UAAWqE,KACpC,cAAC,KAAD,CAAOmQ,KAAK,aAAaxU,UAAW8R,KACpC,cAAC,KAAD,CAAO0C,KAAK,gBAAgBxU,UAAWuT,KACvC,cAAC,KAAD,CAAOiB,KAAK,oBAAoBxU,UAAWqU,iB,GAXjDpQ,aCIEwQ,QACa,cAA7B1E,OAAO2E,SAASC,UAEe,UAA7B5E,OAAO2E,SAASC,UAEhB5E,OAAO2E,SAASC,SAASjH,MACvB,2DCXRkH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFf,SAASgB,eAAe,SDwHlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrT,MAAK,SAAAsT,GACJA,EAAaC,gBAEdzI,OAAM,SAAA0I,GACLvQ,QAAQuQ,MAAMA,EAAMC,c","file":"static/js/main.ad6e26e2.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {ListSubheader} from \"@material-ui/core\";\nimport { List, ListItem, ListItemText, Collapse } from '@material-ui/core'\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\nimport {Link} from 'react-router-dom'\n//import TestTable  from \"./Components/testTable\";\nimport {UserOutlined, NotificationOutlined} from '@ant-design/icons';\n\nimport Button from '@material-ui/core/Button';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n \n\n  const [open, setOpen] = React.useState(true);\n  const [openList, setOpenList] = React.useState(true);\n  const [openUniversal, setOpenUniversal] = React.useState(true);\n  const [openBank, setOpenBank] = React.useState(true);\n\n\n   const handleClick = () => {\n       setOpen(!open);\n   }\n\n\n\n   const handleClickList = () => {\n    setOpenList(!openList);\n}\n\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Первый московский хоспис \n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List component=\"nav\"\n              aria-label=\"nested-list-suheader\"\n              subheader= {\n            <ListSubheader component ='div' id=\"nested-list-subheader\">\n            </ListSubheader>\n        }\n        style = {{display: \"block\"}}\n        className = {classes.root}\n        >\n            <ListItem button onClick={handleClickList}>\n                <ListItemIcon>\n                      <UserOutlined/>\n                </ListItemIcon>\n                <ListItemText primary=\"Пациенты\" />\n                {openList ? <ExpandLess/> : <ExpandMore/> }\n            </ListItem>\n            <Collapse in={openList} timeout=\"auto\" unmountOnExit>\n            \n            <List component=\"div\" disablePadding>\n            <p><Button style = {{display: \"block\", textAlign: \"center\"}}  component={Link} to=\"/TestTable\">Пациенты</Button></p>\n            <p><Button style = {{display: \"block\", textAlign: \"center\"}} component={Link} to=\"/Kartochka\"> Карточка (by id) </Button></p>\n                </List>\n            </Collapse>\n            <ListItem button onClick={handleClickList}>\n                <ListItemIcon>\n                      <NotificationOutlined/>\n                </ListItemIcon>\n                <ListItemText primary=\"Новости\" />\n                {openList ? <ExpandLess/> : <ExpandMore/> }\n            </ListItem>\n            <Collapse in={openList} timeout=\"auto\" unmountOnExit>\n          <p><Button style = {{display: \"block\", textAlign: \"center\"}}  component={Link} to=\"/ZapiskiTable\">Записки Админ</Button></p>\n          <p><Button style = {{display: \"block\", textAlign: \"center\"}}  component={Link} to=\"/ZapiskiTableRole\">Записки Роль</Button></p>\n          <p><Button style = {{display: \"block\", textAlign: \"center\"}}  component={Link} to=\"/DemoNews2\">Заглавная</Button></p>\n            </Collapse>\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <Typography paragraph>\n        </Typography>\n  \n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport CommentIcon from '@material-ui/icons/Comment'\nimport 'antd/dist/antd.css';\nimport Typography from '@material-ui/core/Typography';\n\nconst sliderStyle = {\n  position: \"relative\",\n  width: \"100%\"\n};\n\nclass Kartochka extends React.Component {\n    state = {\n      infoList: []\n      };\n        componentDidMount() {\n          axios.get(`https://avdeevaelena.github.io/json/32.json`)\n          .then(res => {\n            const infoList = res.data;\n            this.setState({ infoList });\n          }) \n          }\n    render() {   \n        const classes = makeStyles((theme) => ({\n            root: {\n              width: '100%',\n              maxWidth: \"100%\",\n              paddingTop: 50,\n              backgroundColor: theme.palette.background.paper,\n            },\n          })); \n          const rows = this.state.infoList;\n          var data = rows[Object.keys(rows)[0]];\n         let userName = rows.filter(item => item.id == 1).map(list => list.nameN);\n         let userFamily = rows.filter(item => item.id == 1).map(list => list.nameS);\n         let userFatherName = rows.filter(item => item.id == 1).map(list => list.nameL);\n         let userBirth = rows.filter(item => item.id == 1).map(list => list.dateB);\n         let userIn = rows.filter(item => item.id == 1).map(list => list.dateP);\n         let userOut = rows.filter(item => item.id == 1).map(list => list.dateV);\n        return (\n          <div style={{   marginTop:60,  width: '100%' }} >\n          <Typography variant=\"h5\" component=\"h3\"\n                  style={{ backgroundColor: '#f5f5f5', textAlign: 'center' }} >\n                    Личная карточка пациента & Записки по пациенту\n            </Typography>\n                      <div style={{ float: 'left',  width: '50%' }}> \n                      <Typography variant=\"h6\" component=\"h6\"\n                  style={{ backgroundColor: '#f5f5f8', textAlign: 'center',  color: '#4B9B00'  }} >\n                    Личная карточка пациента\n            </Typography>      \n                      <List component=\"nav\" aria-label=\"main mailbox folders\">\n            <ListItem button>\n            <ListItemText primary= {userName} secondary=\"Имя\"/>\n            </ListItem>\n            <Divider />\n            <ListItem button > \n            <ListItemText primary= {userFamily} secondary=\"Фамилия\" />\n            </ListItem>\n            <Divider />\n            <ListItem button>\n            <ListItemText primary= {userFatherName}  secondary=\"Отчество\" />\n            </ListItem>\n            <Divider />\n            <ListItem button>\n            <ListItemText primary= {userBirth}  secondary=\"Дата рождения\" />\n            </ListItem>\n            <Divider />\n            <ListItem button>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n              // checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n              // inputProps={{ 'aria-labelledby': labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText primary= {userIn} secondary=\"Дата поступления\"/>\n            </ListItem>\n            <Divider />\n            <ListItem button>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n              // checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n              // inputProps={{ 'aria-labelledby': labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText primary= {userOut} secondary=\"Дата выписки\"/>\n            </ListItem>\n            <Divider />\n            </List>\n            </div>\n            <div style={{ float: 'right',  width: '50%' }}> \n            <Typography variant=\"h6\" component=\"h6\"\n        style={{ backgroundColor: '#f5f5f5', textAlign: 'center',  color: '#4B9B00'  }} >\n          Записки по пациенту </Typography>        \n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n            <ListItem button>\n            <ListItemText children =\"\" primary= \"Какой-нибудь текст Поздравить с Днем рождения\" secondary=\"Ответственное лицо- Иванов П.П.\" secondary=\"Дата: 12.12.2013 Отв. лицо - Петров П.П.\"/>\n            </ListItem>\n            <Divider />\n            <ListItem button > \n            <ListItemText children =\"\" primary= \"Какой-нибудь текст Поздравить с Днем рождения\" secondary=\"Ответственное лицо- Иванов П.П.\" secondary=\"Дата: 12.12.2013 Отв. лицо - Петров П.П.\" />\n            <CommentIcon />\n            </ListItem>\n            <Divider />\n            <ListItem button>\n            <ListItemText children =\"\" primary= \"Какой-нибудь текст Поздравить с Днем рождения\" secondary=\"Ответственное лицо- Иванов П.П.\" secondary=\"Дата: 12.12.2013 Отв. лицо - Петров П.П.\"/>\n            </ListItem>\n            <Divider />\n            </List>\n            </div>\n          </div>   \n        )\n  }\n   }\n   export default Kartochka;","import React from 'react';\nimport axios from 'axios';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst bigDiv =  {background: 'green'};\nconst leftDiv = {background: '#ced9eb', float: 'left', width: '50%',  display: \"flex\"};\nconst rightDiv = {background: '#d1b6ae', float: 'right', width: '50%', display: \"flex\"};\nconst centered = {float: 'left', textAlign: 'left', paddingLeft: '0px'};\n        const  rightCorner = {float: 'left',  position: 'relative', textAlign: 'left', paddingLeft: '0px'};\n         const container = { position: 'relative', color: 'black', textAlign: 'left', float: 'left', paddingLeft: '0px'};\nclass DemoNews2 extends React.Component {\n/*\n    state = {\n      newsList: [],\n      zapiskiList: [],\n      zayvkiList: [],\n      value: 0,\n      setValue: 1,\n      expanded: true,\n      open: false,\n    \n    };\n*/\n    constructor() {\n      super();\n      this.state = {\n        newsList: [],\n      zapiskiList: [],\n      zayvkiList: [],\n      value: 0,\n      setValue: 1,\n      expanded: true,\n      open: false,\n      };\n    }\n\n\n    handleExpandClick = () => {\n      this.state.setExpanded(!this.state.expanded);\n    };\n    handleChangeZayavki = (panel) => (event, isExpanded) => {\n      this.setState( {expanded: isExpanded ? panel : false});\n      };\n \n\n    handleClickOpen123 = () => {\n      console.log (\"TEST TEST open\", this.state.open)\n     \n     if (this.state.open == false)\n     { this.setState( {open: true}, () => {\n        //call back function of set state you could check here updated state\n        console.log(\"answer\", this.state.open)\n      });\n     }\n\n  else\n     { this.setState( {open: true}, () => {\n      //call back function of set state you could check here updated state\n      console.log(\"answer\", this.state.open)\n    });\n   }     \n      };\n\n      handleClose123 = () => {\n        console.log (\"TEST TEST close\", this.state.open)\n        this.setState( {open: false}, () => {\n          //call back function of set state you could check here updated state\n          console.log(\"answer\", this.state.open)\n        });\n    \n      };\n\n   handleChange = (event, newValue) => {\n    this.a11yProps(newValue);\n   // console.log (\"val was\", this.state.value)\n    this.setState({ value: newValue });\n   // console.log (\"val become\", this.state.value)\n  };\n  a11yProps(index) {\n    return {\n     id: `vertical-tab-${index}`, 'aria-controls': `vertical-tabpanel-${index}`,\n    };\n  }\n        componentDidMount() {\n          axios.get(\"https://avdeevaelena.github.io/json/spisokZayavok.json\")\n          .then(res => {\n            const zayvkiList = res.data;\n            this.setState({ zayvkiList });\n          }) \n\n            axios.get(`https://avdeevaelena.github.io/json/spisokNews.json`)\n            .then(res => {\n              const newsList = res.data;\n              this.setState({ newsList });\n            }) \n            axios.get(`https://avdeevaelena.github.io/json/spisokZapisok.json`)\n            .then(res => {\n              const zapiskiList = res.data;\n              this.setState({ zapiskiList });\n            }) \n        } \n        render() {    \n              const tabList = this.state.newsList.map(s => {\n                return (  \n                     <Tab label={s.title} {...this.a11yProps(s.id)} /> \n                );\n              });\n\n              const tabPanel = this.state.newsList.map(s => {\n              return (\n                <div\n                role=\"tabpanel\"\n                hidden={this.state.value+1 != s.id}\n                id={`vertical-tabpanel-${s.id}`}\n               // aria-labelledby={`vertical-tab-${s.id}`}\n              >\n                {this.state.value+1 == s.id && (\n                  <Box p={3}>\n                    <Typography>{s.title}</Typography>\n                    <Typography>{s.content}</Typography>\n                    <Typography>{s.date}</Typography>\n                  </Box>\n                )}\n              </div>\n                ) \n              }\n              );\n      \n              const zapiskiByCorpusLeft = this.state.zapiskiList.map(s => {\n                if (s.corpus == 'left' && s.color == 'green')\n                return (  \n                  <Card bordered={true}\n                 \n                  style={{ backgroundColor:'#b6dbc0',display: 'flex',  marginRight:5, marginBottom:5, marginTop:5  }} >\n               <CardActionArea>\n            <CardContent>\n            <Typography component=\"p\" style={{textAlign: 'right'}}>\n                {s.totalZapisok}\n                </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {s.namepasient}\n              </Typography>\n              <Button  size=\"small\"  onClick={this.handleClickOpen123}>\n              ...\n          </Button>\n        </CardContent>\n        </CardActionArea>\n        <Dialog \n        open={this.state.open }>\n        <DialogTitle>\n          Содержание записки\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n              Пациент: {s.namepasient}\n          </Typography>\n          <Typography gutterBottom>\n          {s.content}\n          </Typography>\n          <Typography gutterBottom>\n          {s.satus} {s.datecreate} \n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={this.handleClose123} color=\"primary\">\n            Закрыть\n          </Button>\n        </DialogActions>\n      </Dialog>\n           </Card>   \n               );  \n               if (s.corpus == 'left' && s.color == 'red')\n               return (  \n                <Card bordered={true}\n                      style={{ backgroundColor:'#f59290',display: 'flex',  marginRight:5, marginBottom:5, marginTop:5  }} >\n                  <CardActionArea>\n                  <CardContent>\n            <Typography component=\"p\" style={{textAlign: 'right'}}>\n                {s.totalZapisok}\n                </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {s.namepasient}\n              </Typography>\n              <Button  size=\"small\"  onClick={this.handleClickOpen123}>\n             ...\n          </Button>\n        </CardContent>\n        </CardActionArea>\n        <Dialog \n        open={this.state.open }>\n        <DialogTitle>\n          Содержание записки\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n              Пациент: {s.namepasient}\n          </Typography>\n          <Typography gutterBottom>\n          {s.content}\n          </Typography>\n          <Typography gutterBottom>\n          {s.satus} {s.datecreate} \n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={this.handleClose123} color=\"primary\">\n            Закрыть\n          </Button>\n        </DialogActions>\n      </Dialog>\n    \n           </Card>   \n             );  \n             });  \n\n             const zapiskiByCorpusRight = this.state.zapiskiList.map(s => {\n              if (s.corpus == 'right' && s.color == 'green')\n              {  return (  \n                <Card bordered={true}\n                style={{ backgroundColor:'#b6dbc0',display: 'flex',  marginRight:5, marginBottom:5, marginTop:5  }} >\n           <CardActionArea>\n                  <CardContent>\n            <Typography component=\"p\" style={{textAlign: 'right'}}>\n                {s.totalZapisok}\n                </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {s.namepasient}\n              </Typography>\n              <Button  size=\"small\"  onClick={this.handleClickOpen123}>\n              ...\n          </Button>\n        </CardContent>\n        </CardActionArea>\n        <Dialog \n        open={this.state.open }>\n        <DialogTitle>\n          Содержание записки\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n              Пациент: {s.namepasient}\n          </Typography>\n          <Typography gutterBottom>\n          {s.content}\n          </Typography>\n          <Typography gutterBottom>\n          {s.satus} {s.datecreate} \n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={this.handleClose123} color=\"primary\">\n            Закрыть\n          </Button>\n        </DialogActions>\n      </Dialog>\n            </Card>   \n              );  \n              }\n              if (s.corpus == 'right')\n              {  return (  \n                <Card bordered={true}\n                  style={{ backgroundColor:'#f59290',display: 'flex',  marginRight:5, marginBottom:5, marginTop:5  }} >\n                <CardActionArea>\n                  <CardContent>\n            <Typography component=\"p\" style={{textAlign: 'right'}}>\n                {s.totalZapisok}\n                </Typography>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {s.namepasient}\n              </Typography>\n              <Button  size=\"small\"  onClick={this.handleClickOpen123}>\n              ...\n          </Button>\n        </CardContent>\n        </CardActionArea>\n        <Dialog \n        open={this.state.open }>\n        <DialogTitle>\n          Содержание записки\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n              Пациент: {s.namepasient}\n          </Typography>\n          <Typography gutterBottom>\n          {s.content}\n          </Typography>\n          <Typography gutterBottom>\n          {s.satus} {s.datecreate} \n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={this.handleClose123} color=\"primary\">\n            Закрыть\n          </Button>\n        </DialogActions>\n      </Dialog>\n               </Card>   \n              );  \n              }\n            }); \n            \n            const showZayvkiList = this.state.zayvkiList.map(s => {\n              return (  \n          <Accordion expanded={this.expanded } onChange={this.handleChangeZayavki(s.date)}\n           >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2bh-content\"\n            id=\"panel2bh-header\"\n          >\n            <Typography style={{fontSize: 'theme.typography.pxToRem(15)',\n            flexBasis: '33.33%',flexShrink: 0, color: 'grey'}}>{s.status}</Typography>\n            <Typography style={{ fontSize: 'theme.typography.pxToRem(15)'}}>\n            {s.zagolovok}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n          <Box p={3}>\n            <Typography>\n            {s.content}\n            </Typography>\n            <Typography>\n            {s.date}\n            </Typography>\n            </Box>\n          </AccordionDetails>\n        </Accordion>\n              );\n            });      \n\n      return (\n        <div>\n              <Paper style={{marginTop:60 }} elevation={1}>\n        <Typography variant=\"h5\" component=\"h3\"\n        style={{ backgroundColor: '#f5f5f5', textAlign: 'center' }} >\n          Новости\n        </Typography>\n                 <div style={{ overflow: 'revert', flexGrow: 1, backgroundColor: \n                 'white',display: 'flex', height: 224, marginRight:5 }}>           \n                <Tabs\n                      orientation=\"vertical\"\n                      variant=\"scrollable\"\n                      value={this.state.value}\n                      onChange={this.handleChange}\n                      aria-label=\"Vertical tabs example\"\n                      style={{overflow: 'revert',borderRightColor: 'grey', borderRight:'1px solid'}}\n                      //className={classes.tabs}\n                              >\n                  {tabList}\n                </Tabs>\n                {tabPanel}    \n              </div>  \n        </Paper>        \n         <Paper style={{marginTop:10 }} elevation={1}>\n        <Typography variant=\"h5\" component=\"h3\"\n        style={{ backgroundColor: '#f5f5f5', textAlign: 'center' }}>\n          Записки по корпусам\n        </Typography>\n               <div  style={bigDiv} > \n                <div style={leftDiv}> \n                 {zapiskiByCorpusLeft}\n                </div>\n                <div style={rightDiv}> \n                   {zapiskiByCorpusRight}\n                </div>\n               </div>\n      </Paper> \n      <Paper style={{marginTop:10 }} elevation={1}>\n        <Typography variant=\"h5\" component=\"h3\"\n        style={{ backgroundColor: '#f5f5f5', textAlign: 'center' }}>\n          Заявки\n        </Typography>\n        <div>\n         {showZayvkiList}\n    </div>\n      </Paper> \n           \n          </div>      \n            )\n      }\n\n\n}\nexport default DemoNews2;","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/tutorials\");\n  }\n\n  get(id) {\n    return http.get(`/tutorials/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/tutorials\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/tutorials/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/tutorials/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/tutorials`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/tutorials?title=${title}`);\n  }\n}\n\nexport default new TutorialDataService();","//import { OLYMPIC_SPORTS, OLYMPIC_COUNTRIES } from \"./olympic_lists.js\";\n\nexport const columnDefs = [\n  {\n    headerName: \"id\",\n    field: \"id\",\n    cellEditor: \"simpleEditor\",\n    filter: true,\n  },\n  {\n    headerName: \"Фамилия\",\n    field: \"nameS\",\n    cellEditor: \"simpleEditor\",\n    filter: true,\n  },\n  {\n    headerName: \"Имя\",\n    field: \"nameN\",\n    cellEditor: \"simpleEditor\"\n  },\n  {\n    headerName: \"Отчество\",\n    field: \"nameL\",\n    cellEditor: \"simpleEditor\"\n  },\n\n  {\n    headerName: \"Дата рождения\",\n    field: \"dateB\",\n    cellEditor: \"simpleEditor\",\n  },\n  {\n    headerName: \"Дата Поступления\",\n    field: \"dateB\",\n    cellEditor: \"simpleEditor\",\n    filter: true,\n    \n  },\n  {\n    headerName: \"Дата Выписки\",\n    field: \"dateV\",\n    cellEditor: \"simpleEditor\",\n    filter: true,\n  },\n  {\n    headerName: \"Действия\",\n    colId: \"actions\",\n    cellRenderer: \"ActionsRendererListPacients\",\n    editable: false,\n    filter: false,\n    minWidth: 220\n  }\n  \n];\n\nexport const defaultColDef = {\n  editable: true,\n  resizable: true,\n  filter: true,\n  floatingFilter: true,\n  suppressKeyboardEvent: params => params.editing\n};\n","import React, { useState, useRef, forwardRef, useImperativeHandle } from \"react\";\n\nexport default forwardRef((props, ref) => {\n    const inputRef = useRef();\n    const [value, setValue] = useState('');\n\n    function inputHandler(e) {\n     //   this.clearFocusedCell();\n        setValue(e.target.value);\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            getValue: () => {\n                return value;\n            },  \n            afterGuiAttached: () => {\n                setValue(props.value);\n                inputRef.current.focus();\n                inputRef.current.select();\n            }\n        };\n    });\n\n    return (\n        <input\n            type=\"text\"\n            className=\"ag-input-field-input ag-text-field-input\"\n            ref={inputRef}\n            onChange={inputHandler}\n            value={value}\n            placeholder={'Enter ' + props.column.colId}\n        />\n    )\n})\n","import React, { useState, useEffect, useRef } from 'react';\n\n// Hook\nexport const useDebounce = (value, delay) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            // Update debounced value after delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            // Cancel the timeout if value changes (also on delay change or unmount)\n            // This is how we prevent debounced value from updating if value is changed ...\n            // .. within the delay period. Timeout gets cleared and restarted.\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [value, delay] // Only re-call effect if value or delay changes\n    );\n\n    return debouncedValue;\n}\n\nexport const useComponentWillMount = func => {\n    const willMount = useRef(true);\n\n    if (willMount.current) {\n        func();\n    }\n\n    willMount.current = false;\n};\n","import React, { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport { useDebounce } from '../../utils';\nimport './AsyncValidationEditor.css';\n\nexport default forwardRef((props, ref) => {\n    const [inputValue, setInputValue] = useState('');\n    const [valid, setValid] = useState(true);\n    const [validating, setValidating] = useState(false);\n    const [touched, setTouched] = useState(false);\n\n    const debouncedInputVal = useDebounce(inputValue, 1000);\n\n    function inputHandler(e) {\n        setTouched(true);\n        setInputValue(e.target.value);\n        setValidating(true);\n    }\n\n    useEffect(() => {\n        // random time between 0 and 1000ms\n        let timeout = Math.floor(Math.random() * 1000);\n\n        new Promise((resolve, reject) => {\n            if (inputValue === '') {\n                resolve(false);\n            } else {\n                setTimeout(() => {\n                    resolve(props.condition(inputValue));\n                }, timeout);\n            }\n        })\n            .then(valid => {\n                setValid(valid);\n                setValidating(false)\n            })\n            .catch(err => console.log(err));\n    }, [debouncedInputVal]);\n\n    useImperativeHandle(ref, () => {\n        return {\n            getValue: () => {\n                return inputValue;\n            },\n            afterGuiAttached: () => {\n                setInputValue(props.value);\n            },\n            isCancelAfterEnd: () => {\n                return !valid || validating;\n            },\n        };\n    });\n\n    let loadingElement = null;\n    let txtColor = null;\n\n    if (valid) {\n        txtColor = 'black'\n        loadingElement = <span className=\"success\">✔</span>\n    } else {\n        txtColor = '#E91E63';\n        loadingElement = <span className=\"fail\">✘</span>\n    }\n\n    if (validating) {\n        txtColor = 'gray';\n        loadingElement = <span className=\"loading\"></span>\n    }\n\n    if (!touched) {\n        txtColor = 'black';\n        loadingElement = null;\n    }\n\n    return (\n        <div className=\"async-validation-container\">\n            <input\n                type=\"text\"\n                className=\"ag-input-field-input ag-text-field-input\"\n                style={{ color: txtColor }}\n                onChange={inputHandler}\n                value={inputValue}\n                placeholder={'Enter ' + props.column.colId}\n            />\n            {loadingElement}\n        </div>\n    )\n})\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default forwardRef((props, ref) => {\n    const [value, setValue] = useState('');\n    const [inputValue, setInputValue] = useState('');\n\n    function onChangeHandler(e, value) {\n        setValue(value);\n    }\n\n    function onInputChangeHandler(e, inputValue) {\n        setInputValue(inputValue);\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            getValue: () => {\n                return value;\n            },\n            afterGuiAttached: () => {\n                setValue(props.value)\n            }\n        };\n    });\n\n    return (\n        <Autocomplete\n            style={{ padding: '0 10px' }}\n            options={props.options}\n            value={value}\n            onChange={onChangeHandler}\n            inputValue={inputValue}\n            onInputChange={onInputChangeHandler}\n            disableClearable\n            renderInput={(params) => (\n                <TextField\n                    {...params}\n                    style={{ padding: '5px 0' }}\n                    placeholder={'Select ' + props.column.colId} />\n            )}\n        />\n    );\n})\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { format } from 'date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n\nexport default forwardRef((props, ref) => {\n    const [selectedDate, setSelectedDate] = useState(null);\n\n    function handleDateChange(d) {\n        if (d) {\n            d.setHours(0, 0, 0, 0);\n        }\n        setSelectedDate(d);\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n            getValue: () => {\n                let dateString = null;\n                if (selectedDate) {\n                    dateString = format(selectedDate, 'dd/MM/yyyy');\n                }\n                return dateString;\n            },\n            isCancelAfterEnd: () => {\n                return !selectedDate;\n            },\n            afterGuiAttached: () => {\n                if (!props.value) {\n                    return;\n                }\n                const [_, day, month, year] = props.value.match(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/);\n                let selectedDate = new Date(year, month - 1, day);\n                setSelectedDate(selectedDate);\n            }\n        };\n    });\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                style={{ width: '100%', margin: 0, padding: '6px 10px', }}\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                format=\"dd/MM/yyyy\"\n                value={selectedDate}\n                onChange={handleDateChange}\n                variant=\"inline\"\n                disableToolbar\n                placeholder={'Enter ' + props.column.colId}\n            />\n        </MuiPickersUtilsProvider>\n    )\n});\n","import React, { useState, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nexport default forwardRef((props, ref) => {\n    const [selectedDate, setSelectedDate] = useState(null);\n\n    function handleDateChange(d) {\n        if (d) {\n            // set time to midnight\n            d.setHours(0, 0, 0, 0);\n        }\n        setSelectedDate(d);\n    }\n\n    useEffect(props.onDateChanged, [selectedDate])\n\n    useImperativeHandle(ref, () => {\n        return {\n            getDate: () => {\n                return selectedDate;\n            },\n            setDate: d => {\n                handleDateChange(d);\n            }\n        };\n    });\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                format=\"dd/MM/yyyy\"\n                value={selectedDate}\n                onChange={handleDateChange}\n            />\n        </MuiPickersUtilsProvider>\n    )\n})\n","import SimpleEditor from './Editors/SimpleEditor';\nimport AsyncValidationEditor from './Editors/AsyncValidationEditor';\nimport AutoCompleteEditor from './Editors/AutoCompleteEditor';\nimport DateEditor from './Editors/DateEditor';\nimport MyDatePicker from './DatePicker/MyDatePicker';\nimport ActionsRenderer from './Renderers/ActionsRenderer';\nimport ActionsRendererWithoutDelete from './Renderers/ActionsRendererWithoutDelete';\nimport AddRowStatusBar from './StatusBar/AddRowStatusBar';\nimport ActionsRendererListPacients from './Renderers/ActionsRendererListPacients'\n\nexport default {\n    SimpleEditor,\n    AsyncValidationEditor,\n    AutoCompleteEditor,\n    DateEditor,\n    MyDatePicker,\n    ActionsRenderer,\n    AddRowStatusBar,\n    ActionsRendererWithoutDelete,\n    ActionsRendererListPacients,\n}","import React, { useState, useEffect } from 'react';\nimport { useComponentWillMount } from '../../utils';\n\nexport default (props) => {\n    let [editing, setEditing] = useState(false);\n    let [disabled, setDisabled] = useState(false);\n\n    // custom hook\n    useComponentWillMount(() => {\n        let editingCells = props.api.getEditingCells();\n        if (editingCells.length !== 0) {\n            setDisabled(true);\n        }\n    })\n\n    useEffect(() => {\n        props.api.addEventListener('rowEditingStarted', onRowEditingStarted);\n        props.api.addEventListener('rowEditingStopped', onRowEditingStopped);\n\n        return () => {\n            props.api.removeEventListener('rowEditingStarted', onRowEditingStarted);\n            props.api.removeEventListener('rowEditingStopped', onRowEditingStopped);\n        };\n    }, []);\n\n    function onRowEditingStarted(params) {\n        if (props.node === params.node) {\n            setEditing(true);\n        } else {\n            setDisabled(true);\n        }\n    };\n\n    function onRowEditingStopped(params) {\n        if (props.node === params.node) {\n            if (isEmptyRow(params.data)) {\n                deleteRow(true);\n            } else {\n                setEditing(false);\n            }\n        } else {\n            setDisabled(false);\n        }\n    }\n\n    function startEditing() {\n        props.api.startEditingCell({\n            rowIndex: props.rowIndex,\n            colKey: props.column.colId\n        });\n    }\n\n    function stopEditing(bool) {\n        props.api.stopEditing(bool);\n    }\n\n    function deleteRow(force = false) {\n        let data = props.data;\n        let confirm = true;\n        if (!force) {\n            confirm = window.confirm(`are you sure you want to delete this row: ${JSON.stringify(data)})`)\n        }\n        if (confirm) {\n            props.api.updateRowData({ remove: [data] });\n            props.api.refreshCells({ force: true });\n        }\n    };\n\n    function isEmptyRow(data) {\n        let dataCopy = { ...data };\n        delete dataCopy.id;\n        return !Object.values(dataCopy).some(value => value);\n    }\n\n    return (\n        <div>\n            {editing\n                ? <>\n                    <button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => stopEditing(false)}\n                        disabled={disabled}>Изменить</button>\n                    <button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={() => stopEditing(true)}\n                        disabled={disabled}>Отменть</button>\n                </>\n                : <>\n                    <button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={startEditing}\n                        disabled={disabled}>Изменить</button>\n                    <button\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        onClick={() => deleteRow()}\n                        disabled={disabled}>Удалить</button>\n                </>\n            }\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { uuid } from \"uuidv4\";\n\nimport \"./AddRowStatusBar.css\";\n\nexport default props => {\n  let [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    props.api.addEventListener(\"rowEditingStarted\", onRowEditingStarted);\n    props.api.addEventListener(\"rowEditingStopped\", onRowEditingStopped);\n\n    return () => {\n      props.api.removeEventListener(\"rowEditingStarted\", onRowEditingStarted);\n      props.api.removeEventListener(\"rowEditingStopped\", onRowEditingStopped);\n    };\n  }, []);\n\n  function onRowEditingStarted() {\n    setEditing(true);\n  }\n\n  function onRowEditingStopped() {\n    setEditing(false);\n  }\n\n  function addRow() {\n    let id = uuid();\n    console.log(\"ROW ID\", id)\n    let emptyRow = { id };\n    props.api.updateRowData({ add: [emptyRow] });\n    let node = props.api.getRowNode(id);\n    console.log(\"ROW  node ID \", node)\n    console.log(\"ROW  node ID rowindex \", node.rowIndex)\n    props.api.ensureIndexVisible(node.rowIndex);\n    \n    console.log(\"ROW  node ID ensureIndexVisible \", props.api.ensureIndexVisible)\n\n\n    setTimeout(() => {\n      props.api.startEditingCell({\n        rowIndex: node.rowIndex,\n        colKey: props.columnApi.getAllColumns()[0].colId\n      });\n    }, 300);\n  }\n\n  return (\n    <div className=\"add-btn-container\">\n      <button\n        variant={editing ? \"outlined\" : \"contained\"}\n        color=\"primary\"\n        onClick={addRow}\n        disabled={editing}\n      >\n       + добавить\n      </button>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useComponentWillMount } from '../../utils';\n\nexport default (props) => {\n    let [editing, setEditing] = useState(false);\n    let [disabled, setDisabled] = useState(false);\n\n    // custom hook\n    useComponentWillMount(() => {\n        let editingCells = props.api.getEditingCells();\n        if (editingCells.length !== 0) {\n            setDisabled(true);\n        }\n    })\n\n    useEffect(() => {\n        props.api.addEventListener('rowEditingStarted', onRowEditingStarted);\n        props.api.addEventListener('rowEditingStopped', onRowEditingStopped);\n\n        return () => {\n            props.api.removeEventListener('rowEditingStarted', onRowEditingStarted);\n            props.api.removeEventListener('rowEditingStopped', onRowEditingStopped);\n        };\n    }, []);\n\n    function onRowEditingStarted(params) {\n        if (props.node === params.node) {\n            setEditing(true);\n        } else {\n            setDisabled(true);\n        }\n    };\n\n    function onRowEditingStopped(params) {\n        if (props.node === params.node) {\n            if (isEmptyRow(params.data)) {\n                deleteRow(true);\n            } else {\n                setEditing(false);\n            }\n        } else {\n            setDisabled(false);\n        }\n    }\n\n    function startEditing() {\n        props.api.startEditingCell({\n            rowIndex: props.rowIndex,\n            colKey: props.column.colId\n        });\n    }\n\n    function stopEditing(bool) {\n        props.api.stopEditing(bool);\n    }\n\n    function deleteRow(force = false) {\n        let data = props.data;\n        let confirm = true;\n        if (!force) {\n            confirm = window.confirm(`are you sure you want to delete this row: ${JSON.stringify(data)})`)\n        }\n        if (confirm) {\n            props.api.updateRowData({ remove: [data] });\n            props.api.refreshCells({ force: true });\n        }\n    };\n\n    function isEmptyRow(data) {\n        let dataCopy = { ...data };\n        delete dataCopy.id;\n        return !Object.values(dataCopy).some(value => value);\n    }\n\n    return (\n        <div>\n            {editing\n                ? <>\n                    <button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => stopEditing(false)}\n                        disabled={disabled}>Изменить</button>\n                    <button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={() => stopEditing(true)}\n                        disabled={disabled}>Отменть</button>\n                </>\n                : <>\n                    <button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={startEditing}\n                        disabled={disabled}>Изменить</button>\n                </>\n            }\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useComponentWillMount } from '../../utils';\n\nexport default (props) => {\n    let [editing, setEditing] = useState(false);\n    let [disabled, setDisabled] = useState(false);\n\n    // custom hook\n    useComponentWillMount(() => {\n        let editingCells = props.api.getEditingCells();\n        if (editingCells.length !== 0) {\n            setDisabled(true);\n        }\n    })\n\n    useEffect(() => {\n        props.api.addEventListener('rowEditingStarted', onRowEditingStarted);\n        props.api.addEventListener('rowEditingStopped', onRowEditingStopped);\n\n        return () => {\n            props.api.removeEventListener('rowEditingStarted', onRowEditingStarted);\n            props.api.removeEventListener('rowEditingStopped', onRowEditingStopped);\n        };\n    }, []);\n\n    function onRowEditingStarted(params) {\n        if (props.node === params.node) {\n            setEditing(true);\n        } else {\n            setDisabled(true);\n        }\n    };\n\n    function onRowEditingStopped(params) {\n        if (props.node === params.node) {\n            if (isEmptyRow(params.data)) {\n                deleteRow(true);\n            } else {\n                setEditing(false);\n            }\n        } else {\n            setDisabled(false);\n        }\n    }\n\n    function startEditing() {\n        props.api.startEditingCell({\n            rowIndex: props.rowIndex,\n            colKey: props.column.colId\n        });\n    }\n\n    function stopEditing(bool) {\n        props.api.stopEditing(bool);\n    }\n\n    function deleteRow(force = false) {\n        let data = props.data;\n        let confirm = true;\n        if (!force) {\n            confirm = window.confirm(`are you sure you want to delete this row: ${JSON.stringify(data)})`)\n        }\n        if (confirm) {\n            props.api.updateRowData({ remove: [data] });\n            props.api.refreshCells({ force: true });\n        }\n    };\n\n    function isEmptyRow(data) {\n        let dataCopy = { ...data };\n        delete dataCopy.id;\n        return !Object.values(dataCopy).some(value => value);\n    }\n\n    return (\n        <div>\n            {editing\n                ? <>\n                    <button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => stopEditing(false)}\n                        disabled={disabled}>Изменить</button>\n                    <button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        onClick={() => stopEditing(true)}\n                        disabled={disabled}>Отменть</button>\n                </>\n                : <>\n                    <button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        onClick={startEditing}\n                        disabled={disabled}>Изменить</button>\n                    <button\n                        color=\"secondary\"\n                        variant=\"outlined\"\n                        onClick={() => deleteRow()}\n                        disabled={disabled}>Удалить</button>\n                </>\n            }\n        </div>\n    )\n}\n","import TutorialDataService from \"../services/tutorial.service\";\nimport React, {Component} from 'react';\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport { columnDefs, defaultColDef } from \"../Columns/columns\";\nimport GridComponents from \"./\";\nimport \"../../src/App.css\";\nimport \"../test.json\";\nimport { Layout} from 'antd';\n\nconst frameworkComponents = {\n    simpleEditor: GridComponents.SimpleEditor,\n    asyncValidationEditor: GridComponents.AsyncValidationEditor,\n    autoCompleteEditor: GridComponents.AutoCompleteEditor,\n    agDateInput: GridComponents.MyDatePicker,\n    dateEditor: GridComponents.DateEditor,\n    ActionsRendererListPacients: GridComponents.ActionsRendererListPacients,\n    addRowStatusBar: GridComponents.AddRowStatusBar\n  }\n \nclass TestTable extends Component {\n   \n\n       state = {\n         setRowData: [],\n         columnApi: [],\n         setColumnApi: [],\n         setGridApi: [],\n         columnDefs: columnDefs,\n         defaultColDef: defaultColDef,\n         frameworkComponents: frameworkComponents\n        };\n\n        onGridReady = this.onGridReady.bind(this);\n\n    onGridReady(params) {\n        this.gridApi = params.api;\n        this.columnApi = params.columnApi;\n        this.gridApi.sizeColumnsToFit();\n    }\n  componentDidMount() {\n    fetch(\n      \"https://avdeevaelena.github.io/json/spisokPacientov.json\"\n    ).then(res => res.json())\n     .then(data => {\n       const list = data.slice(0, 8);\n       this.setState({setRowData: list });\n     });\n  }\n\n  \n\n\n  retrieveTutorials() {\n    TutorialDataService.getAll()\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  render() {\n    const rowData = this.state.setRowData;\n    return (\n        <div   style={{   width: \"100%\", paddingTop: \"60px\"}} >\n             <h3 style={{ color: '#4B9B00', textAlign: 'center' }}> Список Пациентов </h3> \n             <div id=\"myGrid\" style={{height: \"90%\", position: \"absolute\", width: \"90%\",  paddingLeft: \"15px\" }} className=\"ag-theme-alpine\">\n          <AgGridReact\n            columnDefs={this.state.columnDefs}\n            defaultColDef={this.state.defaultColDef}\n            rowData={rowData}\n            getRowNodeId={data => data.id}\n            onGridReady={this.onGridReady}\n            frameworkComponents={frameworkComponents}\n            editType=\"fullRow\"\n            suppressClickEdit\n            statusBar={{\n              statusPanels: [{ statusPanel: \"addRowStatusBar\" }]\n            }}\n          />\n            </div>\n      </div>\n    );\n  }\n}\nexport default TestTable;","//import { OLYMPIC_SPORTS, OLYMPIC_COUNTRIES } from \"./olympic_lists.js\";\n\nexport const columnDefs = [\n    {\n      headerName: \"id\",\n      field: \"id\",\n      cellEditor: \"simpleEditor\"\n    },\n    {\n      headerName: \"Содержание\",\n      field: \"content\",\n      cellEditor: \"simpleEditor\"\n    },\n    {\n        headerName: \"Дата создания\",\n        field: \"datecreate\",\n        cellEditor: \"simpleEditor\"\n      },\n      {\n        headerName: \"Дата изменения\",\n        field: \"datecreate\",\n        cellEditor: \"simpleEditor\"\n      }, \n    {\n      headerName: \"Пациент\",\n      field: \"namepasient\",\n      cellEditor: \"simpleEditor\"\n    },\n    {\n      headerName: \"Автор\",\n      field: \"athor\",\n      cellEditor: \"simpleEditor\"\n    },\n    {\n      headerName: \"Исполнитель\",\n      field: \"executor\",\n      cellEditor: \"simpleEditor\"\n    },\n    {\n        headerName: \"Фактическая дата\",\n        field: \"datedone\",\n        cellEditor: \"simpleEditor\"\n      },\n    {\n      headerName: \"Статус\",\n      field: \"status\",\n      cellEditor: \"autoCompleteEditor\",\n      cellEditorParams: {\n        options: [\n          \"Новая\",\n          \"Назначена\",\n          \"Взята в работу\",\n          \"Исполнена\",\n          \"Отменена\",\n          \"Удалена\"\n        ]\n      }\n    },\n    {\n      headerName: \"Действия\",\n      colId: \"actions\",\n      cellRenderer: \"actionsRenderer\",\n      editable: false,\n      filter: false,\n      minWidth: 220\n    }\n    \n  ];\n  \n  export const defaultColDef = {\n    editable: true,\n    resizable: true,\n    filter: true,\n    floatingFilter: true,\n    suppressKeyboardEvent: params => params.editing\n  };\n  ","import TutorialDataService from \"../services/tutorial.service\";\nimport React, {Component} from 'react';\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\n\nimport { columnDefs, defaultColDef } from \"../Columns/columnsZapiski\";\nimport GridComponents from \"./\";\n\nimport \"../../src/App.css\";\nimport \"../test.json\";\n\n\nimport \"./style.css\";\n\nconst frameworkComponents = {\n    simpleEditor: GridComponents.SimpleEditor,\n    asyncValidationEditor: GridComponents.AsyncValidationEditor,\n    autoCompleteEditor: GridComponents.AutoCompleteEditor,\n    agDateInput: GridComponents.MyDatePicker,\n    dateEditor: GridComponents.DateEditor,\n    actionsRenderer: GridComponents.ActionsRenderer,\n    addRowStatusBar: GridComponents.AddRowStatusBar\n  }\n \nclass ZapiskiTable extends Component {\n\n       state = {\n         setRowData: [],\n         columnApi: [],\n         setColumnApi: [],\n         setGridApi: [],\n         columnDefs: columnDefs,\n         defaultColDef: defaultColDef,\n         frameworkComponents: frameworkComponents\n        };\n\n        onGridReady = this.onGridReady.bind(this);\n\n    onGridReady(params) {\n        this.gridApi = params.api;\n        this.columnApi = params.columnApi;\n        this.gridApi.sizeColumnsToFit();\n    }\n\n  componentDidMount() {\n    fetch(\n      \"https://avdeevaelena.github.io/json/spisokZapisok.json\"\n    ).then(res => res.json())\n     .then(data => {\n       const list = data.slice(0, 8);\n       this.setState({setRowData: list });\n     });\n  }\n\n  retrieveTutorials() {\n    TutorialDataService.getAll()\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  render() {\n    const rowData = this.state.setRowData;\n    return (\n      <div   style={{   width: \"100%\", paddingTop: \"60px\"}} >\n             <h3 style={{ color: '#4B9B00', textAlign: 'center' }}> Список Записок Админ </h3> \n        <div id=\"myGrid\" style={{height: \"90%\", position: \"absolute\", width: \"90%\",  paddingLeft: \"15px\" }} className=\"ag-theme-alpine\">\n          <AgGridReact\n            columnDefs={this.state.columnDefs}\n            defaultColDef={this.state.defaultColDef}\n            rowData={rowData}\n            getRowNodeId={data => data.id}\n            onGridReady={this.onGridReady}\n            rowClassRules={{\n              'red-row': function (params){\n                    console.log (\"Цвета\", params.data.color)\n                if (params.data.color === 'red')\n                return true;\n              },\n              'green-row': function (params){\n                console.log (\"Цвета\", params.data.color)\n                if (params.data.color === 'green')\n                return true;\n             },\n             'yellow-row': function (params){\n              console.log (\"Цвета\", params.data.color)\n              if (params.data.color === 'yellow')\n              return true;\n           },\n            }}\n            frameworkComponents={frameworkComponents}\n            editType=\"fullRow\"\n            suppressClickEdit\n            statusBar={{\n              statusPanels: [{ statusPanel: \"addRowStatusBar\" }]\n            }}\n          />\n            </div>\n      </div>\n    );\n  }\n}\nexport default ZapiskiTable;","//import { OLYMPIC_SPORTS, OLYMPIC_COUNTRIES } from \"./olympic_lists.js\";\n\nexport const columnDefs = [\n    {\n      headerName: \"id\",\n      field: \"id\",\n      cellEditor: \"simpleEditor\"\n    },\n    {\n      headerName: \"Содержание ref\",\n      field: \"content\",\n      cellEditor: \"simpleEditor\",\n      cellRenderer: 'showMultiline',\n      cellClass: 'cell-wrap',\n      autoHeight: true\n    },\n    {\n        headerName: \"Дата создания\",\n        field: \"datecreate\",\n        cellEditor: \"simpleEditor\"\n      },\n      {\n        headerName: \"Дата изменения\",\n        field: \"datecreate\",\n        cellEditor: \"simpleEditor\"\n      }, \n    {\n      headerName: \"Пациент\",\n      field: \"namepasient\",\n      cellEditor: \"simpleEditor\",\n      cellRenderer: function(params) {\n        console.log (\"SEACH VALUE\", params.value)\n        console.log (\"SEACH VALUE 2\", params.data.id)\n        return '<a href=\"http://localhost:8081/Kartochka/'+params.data.id+'\" target=\"_blank\" rel=\"noopener\">'+ params.value+'</a>'\n      }\n    },\n    {\n      headerName: \"Автор\",\n      field: \"athor\",\n      cellEditor: \"simpleEditor\"\n    },\n    {\n      headerName: \"Исполнитель\",\n      field: \"executor\",\n      cellEditor: \"simpleEditor\"\n    },\n    {\n        headerName: \"Фактическая дата\",\n        field: \"datedone\",\n        cellEditor: \"simpleEditor\"\n      },\n    {\n      headerName: \"Статус\",\n      field: \"status\",\n      cellEditor: \"autoCompleteEditor\",\n      cellEditorParams: {\n        options: [\n          \"Новая\",\n          \"Назначена\",\n          \"Взята в работу\",\n          \"Исполнена\",\n          \"Отменена\",\n          \"Удалена\"\n        ]\n      }\n    },\n    {\n      headerName: \"Действия\",\n      colId: \"actions\",\n      cellRenderer: \"actionsRendererWithoutDelete\",\n      editable: false,\n      filter: false,\n      minWidth: 220\n    }\n    \n  ];\n  \n  export const defaultColDef = {\n    editable: true,\n    resizable: true,\n    filter: true,\n    floatingFilter: true,\n    suppressKeyboardEvent: params => params.editing\n  };\n  \n  function showMultiline() {}\n  showMultiline.prototype.init = function(params) {\n    //check if the field has a value\n    var cellBlank = !params.value;\n    if (cellBlank) {\n      return null;\n    }\n\n    this.ui = document.createElement('div');\n    this.ui.innerHTML = '<div style=\"font-weight: bold;\">' +\n      params.value+\n      \"<br/>\" +\n      params.value+\n      \"<br/>\" +\n      '</div>';\n  };\n  showMultiline.prototype.getGui = function() {\n    return this.ui;\n  }","\nimport TutorialDataService from \"../services/tutorial.service\";\nimport React, {Component} from 'react';\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\n\nimport { columnDefs, defaultColDef } from \"../Columns/columnsZapiskiRole\";\nimport GridComponents from \"./\";\n\nimport { uuid } from \"uuidv4\";\nimport \"../../src/App.css\";\nimport axios from 'axios';\nimport \"../test.json\";\nimport {gridStyleHeader, gridStyleContent} from  './gridsStyle.js';\nimport { Layout, Menu } from 'antd';\nimport \"./style.css\";\n\nconst { Header } = Layout;\nconst frameworkComponents = {\n    simpleEditor: GridComponents.SimpleEditor,\n    asyncValidationEditor: GridComponents.AsyncValidationEditor,\n    autoCompleteEditor: GridComponents.AutoCompleteEditor,\n    agDateInput: GridComponents.MyDatePicker,\n    dateEditor: GridComponents.DateEditor,\n    actionsRenderer: GridComponents.ActionsRendererWithoutDelete,\n    addRowStatusBar: GridComponents.AddRowStatusBar\n  }\n \nclass ZapiskiTableRole extends Component {\n   \n\n       state = {\n         setRowData: [],\n         columnApi: [],\n         setColumnApi: [],\n         setGridApi: [],\n         columnDefs: columnDefs,\n         defaultColDef: defaultColDef,\n         frameworkComponents: frameworkComponents\n        };\n\n        onGridReady = this.onGridReady.bind(this);\n\n    onGridReady(params) {\n        this.gridApi = params.api;\n        this.columnApi = params.columnApi;\n        this.gridApi.sizeColumnsToFit();\n    }\n\n  componentDidMount() {\n    fetch(\n      \"https://avdeevaelena.github.io/json/spisokZapisok.json\"\n    ).then(res => res.json())\n     .then(data => {\n       const list = data.slice(0, 8);\n       this.setState({setRowData: list });\n     });\n  }\n\n  retrieveTutorials() {\n    TutorialDataService.getAll()\n      .then(response => {\n        console.log(\"DAta Full color\",response.data);\n        this.setState({\n          tutorials: response.data\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  render() {\n    const rowData = this.state.setRowData;\n    return (\n        <div   style={{   width: \"100%\", paddingTop: \"60px\"}} >\n             <h3 style={{ color: '#4B9B00', textAlign: 'center' }}> Список Записок Роль </h3> \n             <div id=\"myGrid\" style={{height: \"90%\", position: \"absolute\", width: \"90%\",  paddingLeft: \"15px\" }} className=\"ag-theme-alpine\">\n          <AgGridReact\n            columnDefs={this.state.columnDefs}\n            defaultColDef={this.state.defaultColDef}\n            rowData={rowData}\n            cellRenderer={function(params) {\n              return '<a href=\"https://www.google.com\" target=\"_blank\" rel=\"noopener\">'+ params.data.status+'</a>'\n            }}\n            getRowNodeId={data => data.id}\n            onGridReady={this.onGridReady}\n            rowClassRules={{\n              'red-row': function (params){\n                    console.log (\"Цвета\", params.data.color)\n                if (params.data.color === 'red')\n                return true;\n              },\n              'green-row': function (params){\n                console.log (\"Цвета\", params.data.color)\n                if (params.data.color === 'green')\n                return true;\n             },\n             'yellow-row': function (params){\n              console.log (\"Цвета\", params.data.color)\n              if (params.data.color === 'yellow')\n              return true;\n           },\n            }}\n            frameworkComponents={frameworkComponents}\n            editType=\"fullRow\"\n            suppressClickEdit\n          />\n            </div>\n      </div>\n    );\n  }\n}\nexport default ZapiskiTableRole;","export const gridStyleSider = {\n    width: '100%',\n    height: '100vh',\n    textAlign: 'center',\n    background: 'green'\n  };\n   \n    export const gridStyleHeader = {\n      width: '100%',\n      height: '10%',\n      textAlign: 'center',\n      background: '#4B9B00',\n      textColor : 'white',\n    };\n    \n    export const gridStyleContent = {\n      width: '100%',\n      textAlign: 'center',\n      background: '#C8DED6',\n      height: '100%'\n    };\n    \n    export const gridStyleLayout1 = {\n      width: '100%',\n      textAlign: 'center',\n      background: 'white',\n    }; \n  \n  \n    export const styleCard = {\n      \n      background: 'white',\n     // textcolor: 'green',\n     // textcolor: '#00FF00',\n      textColor: \"green\",\n      color: \"green\",\n      font: \"#363636\" ,\n      height: \"100%\",\n      borderColor: \"#DAA520\",\n      borderRadius: \"1\"\n      \n    }; ","import React, { Component } from 'react';\nimport MenuBar from './Components/MenuBar';\nimport Kartochka from './Components/Kartochka';\nimport DemoNews2 from './Components/DemoNews2';\nimport TestTable from './Components/testTable';\nimport {Switch, Route, BrowserRouter} from \"react-router-dom\";\nimport ZapiskiTable from './Components/zapiskiTable';\nimport ZapiskiTableRole from './Components/zapiskiTableRole';\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div style ={{backgraund:\"green\",  marginRight:5, marginTop:10, width: \"100%\",  height: \"100%\", display:\"flex\"}}>\n      <MenuBar/>\n            <Switch>                    \n                        <Route path=\"/Kartochka\" component={Kartochka} />\n                        <Route path=\"/DemoNews2\" component={DemoNews2} />\n                        <Route path=\"/TestTable\" component={TestTable} />\n                        <Route path=\"/ZapiskiTable\" component={ZapiskiTable} />\n                        <Route path=\"/ZapiskiTableRole\" component={ZapiskiTableRole} />\n                       \n             </Switch>\n      </div>\n       </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}